{"version":3,"file":"index-DlSLr1Po.js","sources":["../../../../apps/dapp/src/app/elements/settings/settings.style.ts","../../../../apps/dapp/src/app/elements/settings/settings.view.ts","../../../../apps/dapp/src/app/elements/settings/settings.element.ts"],"sourcesContent":["import { css } from 'lit';\nimport { mobileMediaCSS } from '@one-inch-community/core/lit';\n\nexport const settingsStyle = css`\n    \n    :host {\n        display: flex;\n        flex-direction: column;\n        position: relative;\n    }\n\n    .settings-view-item {\n        color: var(--color-content-content-primary);\n        font-size: 16px;\n        font-style: normal;\n        font-weight: 500;\n        line-height: 24px;\n        height: 64px;\n        width: 100%;\n        border-radius: 16px;\n        display: flex;\n        padding: 20px 16px;\n        box-sizing: border-box;\n        gap: 8px;\n        transition: background-color .2s;\n    }\n    \n    .main-settings-container {\n        display: flex;\n        flex-direction: column;\n        position: relative;\n        \n        gap: 8px;\n        height: fit-content;\n        width: 100%;\n        min-width: 300px;\n    }\n    \n    .segmented-control-container {\n        padding-top: 16px;\n        color: var(--color-content-content-primary);\n        font-size: 16px;\n        font-style: normal;\n        font-weight: 500;\n        line-height: 24px;\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n    }\n    \n    .segmented-control-label {\n        padding-left: 16px;\n    }\n    \n    .theme-container {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        color: var(--color-content-content-primary);\n        font-size: 16px;\n        font-style: normal;\n        font-weight: 500;\n        line-height: 24px;\n        gap: 16px;\n    }\n    \n    .theme-item {\n        border-radius: 16px;\n        padding: 16px;\n        display: flex;\n        flex-direction: column;\n        gap: 16px;\n        background-color: var(--color-background-bg-secondary);\n        box-sizing: border-box;\n        transition: box-shadow .2s;\n    }\n    \n    .theme-item-select {\n        box-shadow: inset 0 0 0 1px var(--primary);\n    }\n    \n    @media (hover: hover) {\n        .settings-view-item:hover {\n            background-color: var(--color-background-bg-secondary);\n        }\n        \n        .theme-item:not(.theme-item-select):hover {\n            box-shadow: inset 0 0 0 1px var(--primary-50)\n        }\n    }\n\n    ${mobileMediaCSS(css`\n        .main-settings-container {\n            width: calc(100vw - 16px);\n        }\n    `)}\n`\n","import { html, LitElement } from 'lit';\nimport { SceneController } from '@one-inch-community/ui-components/scene';\nimport '@one-inch-community/ui-components/icon';\nimport '@one-inch-community/ui-components/card';\nimport '@one-inch-community/ui-components/segmented-control';\nimport type { SegmentedControlItem } from '@one-inch-community/ui-components/segmented-control';\nimport { BrandColors, IApplicationContext, Locale, MainColors } from '@one-inch-community/models';\nimport { dispatchEvent } from '@one-inch-community/core/lit';\nimport { classMap } from 'lit/directives/class-map.js';\n\nexport function getMainSettingsView(scene: SceneController<string, string>, element: LitElement) {\n  return html`\n    <div class=\"main-settings-container\">\n      <inch-card-header\n        backButton\n        headerText=\"Settings\"\n        @backCard=\"${() => dispatchEvent(element, 'closeSettings', null)}\"\n      ></inch-card-header>\n      <div class=\"settings-view-container\">\n        ${getMainSettingsViewItem(scene, 'image24', 'Personalization', 'personalization')}\n        ${getMainSettingsViewItem(scene, 'globe24', 'Localization', 'localization')}\n      </div>\n    </div>\n  `\n}\n\nconst primaryColor: SegmentedControlItem[] = [\n  { value: BrandColors.community, label: 'community' },\n  { value: BrandColors.violet, label: 'violet' },\n  { value: BrandColors.random, label: 'random' },\n  { value: BrandColors.rainbow, label: 'rainbow' },\n]\n\nconst themes = [\n  { value: MainColors.systemSync, label: 'Automatic', icon: 'command24' },\n  { value: MainColors.dark, label: 'Dark', icon: 'moon24' },\n  { value: MainColors.light, label: 'light', icon: 'sun24' },\n]\n\nexport function getPersonalizationSettingsView(\n  scene: SceneController<string, string>,\n  applicationContext: IApplicationContext,\n  element: LitElement\n) {\n  return html`\n    <div class=\"main-settings-container\">\n      <inch-card-header\n        backButton\n        headerText=\"Personalization\"\n        @backCard=\"${() => scene.back()}\"\n      ></inch-card-header>\n      <div class=\"settings-view-container\">\n        <div class=\"theme-container\">\n          ${themes.map(item => {\n            const classes = {\n              'theme-item': true,\n              'theme-item-select': item.value === applicationContext.themesController.getActiveMainColor()\n            }\n            return html`\n            <div @click=\"${async (event: MouseEvent) => {\n              await applicationContext.themesController.onChangeMainColor(item.value, event)\n              element.requestUpdate()\n            }}\" class=\"${classMap(classes)}\">\n              <inch-icon icon=\"${item.icon}\"></inch-icon>\n              <span>${item.label}</span>\n            </div>\n          `\n          })}\n        </div>\n        <div class=\"segmented-control-container\">\n          <span class=\"segmented-control-label\">Primary color</span>\n          <inch-segmented-control\n            .items=\"${primaryColor}\"\n            .select=\"${primaryColor.find(item => item.value === applicationContext.themesController.getActiveBrandColor())}\"\n            @change=\"${(event: CustomEvent) => applicationContext.themesController.onChangeBrandColor(event.detail.value)}\"\n          ></inch-segmented-control>\n        </div>\n      </div>\n    </div>\n  `\n}\n\nexport function getLocalizationSettingsView(scene: SceneController<string, string>, applicationContext: IApplicationContext) {\n  return html`\n    <div class=\"main-settings-container\">\n      <inch-card-header\n        backButton\n        headerText=\"Language\"\n        @backCard=\"${() => scene.back()}\"\n      ></inch-card-header>\n      <div class=\"settings-view-container\">\n        ${getLocalizationSettingsViewItem('English', Locale.en, applicationContext)}\n        ${getLocalizationSettingsViewItem('العربية', Locale.ar, applicationContext)}\n        ${getLocalizationSettingsViewItem('Deutsch', Locale.de, applicationContext)}\n        ${getLocalizationSettingsViewItem('français', Locale.fr, applicationContext)}\n        ${getLocalizationSettingsViewItem('Español', Locale.es, applicationContext)}\n      </div>\n    </div>\n  `\n}\n\nfunction getMainSettingsViewItem(\n  scene: SceneController<string, string>,\n  iconName: string,\n  nameView: string,\n  nextScene: string\n) {\n  return html`\n    <div class=\"settings-view-item\" @click=\"${() => scene.nextTo(nextScene)}\">\n      <inch-icon icon=\"${iconName}\"></inch-icon>\n      <span>${nameView}</span>\n    </div>\n  `\n}\n\nfunction getLocalizationSettingsViewItem(\n  nameView: string,\n  code: Locale,\n  applicationContext: IApplicationContext\n) {\n  return html`\n    <div class=\"settings-view-item\" @click=\"${() => applicationContext.i18nController.changeLocale(code)}\">\n      <span>${nameView}</span>\n    </div>\n  `\n}\n","import { html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { settingsStyle } from './settings.style';\nimport { SceneController, shiftAnimation } from '@one-inch-community/ui-components/scene';\nimport { getLocalizationSettingsView, getMainSettingsView, getPersonalizationSettingsView } from './settings.view';\nimport { consume } from '@lit/context';\nimport { ApplicationContextToken } from '@one-inch-community/core/application-context';\nimport { IApplicationContext, Locale } from '@one-inch-community/models';\nimport { getMobileMatchMediaAndSubscribe } from '@one-inch-community/core/lit';\n\nconst localeCount = Object.keys(Locale).length\nconst localizationHeight = 44 + 8 + (localeCount * 64)\n\n@customElement(Settings.tagName)\nexport class Settings extends LitElement {\n  static readonly tagName = 'inch-settings'\n\n  static override styles = settingsStyle\n\n  private readonly mobileMedia = getMobileMatchMediaAndSubscribe(this)\n\n  @consume({ context: ApplicationContextToken })\n  applicationContext!: IApplicationContext\n\n  private readonly scene = new SceneController('main', {\n    main: { minWidth: this.getWidth(), maxWidth: this.getWidth(), maxHeight: 180, minHeight: 180 },\n    personalization: { minWidth: this.getWidth(), maxWidth: this.getWidth(), maxHeight: 240, minHeight: 240 },\n    localization: { minWidth: this.getWidth(), maxWidth: this.getWidth(), maxHeight: localizationHeight, minHeight: localizationHeight }\n  }, shiftAnimation())\n\n  protected render() {\n    return html`\n      <div class=\"settings-scene-container\">\n        ${this.scene.render({\n          main: () => getMainSettingsView(this.scene, this),\n          personalization: () => getPersonalizationSettingsView(this.scene, this.applicationContext, this),\n          localization: () => getLocalizationSettingsView(this.scene, this.applicationContext),\n        })}\n      </div>\n    `\n  }\n\n  private getWidth() {\n    if (this.mobileMedia.matches) return window.innerWidth - 16\n    return 556\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'inch-settings': Settings\n  }\n}\n"],"names":["settingsStyle","css","mobileMediaCSS","getMainSettingsView","scene","element","html","dispatchEvent","getMainSettingsViewItem","primaryColor","BrandColors","themes","MainColors","getPersonalizationSettingsView","applicationContext","item","classes","event","classMap","getLocalizationSettingsView","getLocalizationSettingsViewItem","Locale","iconName","nameView","nextScene","code","localeCount","localizationHeight","Settings","LitElement","getMobileMatchMediaAndSubscribe","SceneController","shiftAnimation","__decorateClass","consume","ApplicationContextToken","customElement"],"mappings":"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"}