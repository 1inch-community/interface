{"version":3,"mappings":"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","names":["zeroAddress","BigMath","number","decimals","numerator","denominator","numeratorDecimals","denominatorDecimals","resultDecimals","scale","resultScale","valueA","valueB","valueADecimals","valueBDecimals","product","maxDecimals","sum","difference","numbers","numbersDecimals","num","acc","curr","base","exponent","baseDecimals","factor","result","values","value","percentage","decimalPercentage","__defProp","__getOwnPropDesc","__decorateClass","decorators","target","key","kind","i","decorator","FactoryContractABI","parseAbi","PoolContractABI","UniswapV2BaseRateAdapter","name","factoryContractGetter3","supportedChain","LongTimeCache","chainId","sourceToken","destinationToken","srcTokenAddress","getAddress","dstTokenAddress","pool","token0","reserves","lastBlockTimestamp","isRevertRate","isAddressEqual","rate","revertedRate","error","id1","id2","client","getClient","uniswapV2Adapter","ChainId","SushiSwapFactory","ChainId2","sushiswapV2Adapter","PancakeSwapFactory","ChainId3","pancakeswapV2Adapter","FactoryContractABI2","parseAbi2","PoolContractABI2","UniswapV3BaseRateAdapter","feeTiers","LongTimeCache2","BlockTimeCache","getAddress2","zeroAddress2","isAddressEqual2","sqrtPriceX96","liquidity","getClient2","resultPool","maxLiquidity","fee","Q96","sourceTokenAmount","destinationTokenAmount","BigMath2","factoryContractGetter","ChainId4","uniswapV3Adapter","factoryContractGetter2","ChainId5","pancakeswapV3Adapter","SushiSwapFactory2","ChainId6","sushiswapV3Adapter","spookyswapV3Adapter","ChainId7","TokenRateProvider","onChainAdapters","BlockTimeCache2","getRateVale","rate2","maxRate","item","getBlockEmitter","startWith","switchMap","_srcToken","_dstToken","isNativeToken","wToken","getWrapperNativeToken","id","cacheRateList","sources","source","cleanRateList","CacheActivePromise","_","buildDefaultTokenRateProvider","USDTAddresses","ChainId8","TokenUsdOnChainPriceProvider","token","USDTAddress","isAddressEqual3","formatUnits","TokenPriority","TokenSchema","_a","QueueCache","Dexie","__vitePreload","n","m","db","address","recordId","getId","records","nativeTokenAddress","symbol","record","addresses","addressesSet","walletAddress","tokenAddress","isAddressEqual4","list","tokens","tableTokens","calcTokenPriority","balances","balancesRecords","filterPattern","priority","favoriteTokenSet","notZero","zero","_filterPattern","address1","address2","priority1","priority2","isFavoriteToken1","isFavoriteToken2","state","args","dto","tag","averageBlockTime","ChainId9","lastUpdateTokenDatabaseTimestampStorageKey","lastUpdateTokenBalanceDatabaseTimestampStorageKey","tokenDatabaseTTL","tokenBalanceDatabaseTTL","TokenController","storage","JsonParser","context","prices","favoriteTokenList","tokenAmount","tokenPrice","balance","formatUnits2","token1","token2","isStable","record1","record2","isStable1","isStable2","tokenAddressList","price","isSupportedEIP2612","lastUpdateTime","update","querier","defer","liveQuery","getBalances","CacheActivePromise2","isTokensEqual","isAddressMatching","isAddressEqual5","isChainIdMatching","isRateEqual","rate1"],"ignoreList":[0],"sources":["../../../../node_modules/.pnpm/viem@2.21.5_typescript@5.5.3/node_modules/viem/_esm/constants/address.js","../../../libs/core/math/index.esm.js","../../../libs/sdk/tokens/index.esm.js"],"sourcesContent":["export const entryPoint06Address = '0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789';\nexport const entryPoint07Address = '0x0000000071727De22E5E9d8BAf0edAc6f37da032';\nexport const zeroAddress = '0x0000000000000000000000000000000000000000';\n//# sourceMappingURL=address.js.map","// libs/core/src/lib/math/big-math.ts\nvar BigMath = class {\n  constructor() {\n    throw new Error(\"BigMath does not support instance creation. Use static methods: div, mul, add, sub, avr, pow, min, max.\");\n  }\n  static from(number, decimals) {\n    return BigInt(number * 10 ** decimals);\n  }\n  static div(numerator, denominator, numeratorDecimals, denominatorDecimals, resultDecimals = denominatorDecimals) {\n    if (denominator === 0n) {\n      throw new Error(\"Division by zero.\");\n    }\n    if (numerator === 0n) {\n      return 0n;\n    }\n    const scale = BigInt(10) ** BigInt(Math.max(numeratorDecimals, denominatorDecimals));\n    numerator = numerator * (scale / BigInt(10) ** BigInt(numeratorDecimals));\n    denominator = denominator * (scale / BigInt(10) ** BigInt(denominatorDecimals));\n    const resultScale = BigInt(10) ** BigInt(resultDecimals);\n    numerator = numerator * resultScale;\n    return numerator / denominator;\n  }\n  static mul(valueA, valueB, valueADecimals, valueBDecimals, resultDecimals = valueBDecimals) {\n    if (valueA === 0n || valueB === 0n) {\n      return 0n;\n    }\n    const product = valueA * valueB;\n    const totalDecimals = BigInt(valueADecimals + valueBDecimals);\n    const scale = 10n ** totalDecimals;\n    const resultScale = 10n ** BigInt(resultDecimals);\n    return product * resultScale / scale;\n  }\n  static add(valueA, valueB, valueADecimals, valueBDecimals, resultDecimals = valueBDecimals) {\n    const maxDecimals = Math.max(valueADecimals, valueBDecimals, resultDecimals);\n    valueA = valueA * BigInt(10) ** BigInt(maxDecimals - valueADecimals);\n    valueB = valueB * BigInt(10) ** BigInt(maxDecimals - valueBDecimals);\n    const sum = valueA + valueB;\n    if (resultDecimals < maxDecimals) {\n      return sum / BigInt(10) ** BigInt(maxDecimals - resultDecimals);\n    }\n    return sum;\n  }\n  static sub(valueA, valueB, valueADecimals, valueBDecimals, resultDecimals = valueBDecimals) {\n    const maxDecimals = Math.max(valueADecimals, valueBDecimals, resultDecimals);\n    valueA = valueA * BigInt(10) ** BigInt(maxDecimals - valueADecimals);\n    valueB = valueB * BigInt(10) ** BigInt(maxDecimals - valueBDecimals);\n    const difference = valueA - valueB;\n    if (resultDecimals < maxDecimals) {\n      return difference / BigInt(10) ** BigInt(maxDecimals - resultDecimals);\n    }\n    return difference;\n  }\n  static avr(numbers, numbersDecimals, resultDecimals = numbersDecimals) {\n    if (numbers.length === 0) {\n      return 0n;\n    }\n    const scale = BigInt(10) ** BigInt(resultDecimals);\n    const scaledNumbers = numbers.map((num) => num * scale / BigInt(10) ** BigInt(numbersDecimals));\n    const sum = scaledNumbers.reduce((acc, curr) => acc + curr, BigInt(0));\n    return sum / BigInt(numbers.length);\n  }\n  static pow(base, exponent, baseDecimals, resultDecimals = baseDecimals) {\n    if (exponent < 0) {\n      throw new Error(\"Negative exponents are not supported.\");\n    }\n    if (exponent === 0) {\n      return BigInt(10) ** BigInt(resultDecimals);\n    }\n    const factor = BigInt(10) ** BigInt(baseDecimals);\n    const adjustedBase = base * factor;\n    let result = adjustedBase ** BigInt(exponent);\n    const resultScale = BigInt(10) ** BigInt(exponent * baseDecimals);\n    result = result / resultScale;\n    if (resultDecimals !== baseDecimals) {\n      const scale = BigInt(10) ** BigInt(resultDecimals - baseDecimals);\n      result = result * scale;\n    }\n    return result;\n  }\n  static min(...values) {\n    let result = values[0];\n    for (const value of values) {\n      if (value < result) {\n        result = value;\n      }\n    }\n    return result;\n  }\n  static max(...values) {\n    let result = values[0];\n    for (const value of values) {\n      if (value > result) {\n        result = value;\n      }\n    }\n    return result;\n  }\n  static calculatePercentage(value, percentage) {\n    if (percentage < 0 || percentage > 100) {\n      throw new Error(\"Percentage must be a number between 0 and 100\");\n    }\n    const decimalPercentage = percentage / 100;\n    return value * BigInt(decimalPercentage * 1e32) / BigInt(1e32);\n  }\n};\nexport {\n  BigMath\n};\n//# sourceMappingURL=index.esm.js.map\n","var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\n\n// libs/sdk/src/lib/tokens/token-rate/base-adapters/uniswap-v2-base-rate-adapter.ts\nimport { getAddress, isAddressEqual, parseAbi, zeroAddress } from \"viem\";\nimport { getClient } from \"@one-inch-community/sdk/chain\";\nimport { BigMath } from \"@one-inch-community/core/math\";\nimport { LongTimeCache } from \"@one-inch-community/core/cache\";\nvar FactoryContractABI = parseAbi([\n  \"function getPair(address tokenA, address tokenB) external view returns (address pair)\"\n]);\nvar PoolContractABI = parseAbi([\n  \"function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast)\",\n  \"function token0() external view returns (address)\",\n  \"function token1() external view returns (address)\"\n]);\nvar UniswapV2BaseRateAdapter = class {\n  constructor(name, factoryContractGetter3, supportedChain) {\n    this.name = name;\n    this.factoryContractGetter = factoryContractGetter3;\n    this.supportedChain = supportedChain;\n    this.pools = new LongTimeCache(`${this.name}_pools`, 7);\n  }\n  isSupportedChain(chainId) {\n    return this.supportedChain.includes(chainId);\n  }\n  async getRate(chainId, sourceToken, destinationToken) {\n    try {\n      const srcTokenAddress = getAddress(sourceToken.address);\n      const dstTokenAddress = getAddress(destinationToken.address);\n      const [pool, token0] = await this.getPool(chainId, srcTokenAddress, dstTokenAddress);\n      if (pool === zeroAddress) {\n        return null;\n      }\n      const reserves = await this.getReserves(chainId, pool);\n      const lastBlockTimestamp = reserves[2];\n      if (Date.now() - lastBlockTimestamp * 1e3 > 36e5) {\n        return null;\n      }\n      const isRevertRate = !isAddressEqual(sourceToken.address, token0);\n      const rate = BigMath.div(\n        isRevertRate ? reserves[0] : reserves[1],\n        isRevertRate ? reserves[1] : reserves[0],\n        destinationToken.decimals,\n        sourceToken.decimals,\n        destinationToken.decimals\n      );\n      const revertedRate = BigMath.div(\n        isRevertRate ? reserves[1] : reserves[0],\n        isRevertRate ? reserves[0] : reserves[1],\n        sourceToken.decimals,\n        destinationToken.decimals,\n        sourceToken.decimals\n      );\n      return {\n        chainId,\n        rate,\n        revertedRate,\n        isReverted: isRevertRate,\n        sourceToken,\n        destinationToken\n      };\n    } catch (error) {\n      console.error(`Error in UniswapV2BaseAdapter adapter name ${this.name}`, error);\n      return null;\n    }\n  }\n  async getPool(chainId, srcTokenAddress, dstTokenAddress) {\n    const id1 = [chainId, srcTokenAddress, dstTokenAddress].join(\":\");\n    if (this.pools.has(id1)) {\n      return this.pools.get(id1);\n    }\n    const id2 = [chainId, dstTokenAddress, srcTokenAddress].join(\":\");\n    if (this.pools.has(id2)) {\n      return this.pools.get(id2);\n    }\n    const client = getClient(chainId);\n    let pool = await client.readContract({\n      address: getAddress(this.factoryContractGetter(chainId)),\n      functionName: \"getPair\",\n      args: [srcTokenAddress, dstTokenAddress],\n      abi: FactoryContractABI\n    });\n    if (pool !== zeroAddress) {\n      pool = await client.readContract({\n        address: getAddress(this.factoryContractGetter(chainId)),\n        functionName: \"getPair\",\n        args: [dstTokenAddress, srcTokenAddress],\n        abi: FactoryContractABI\n      });\n    }\n    let token0 = zeroAddress;\n    if (pool !== zeroAddress) {\n      token0 = await client.readContract({\n        address: pool,\n        abi: PoolContractABI,\n        functionName: \"token0\"\n      });\n    }\n    this.pools.set(id1, [pool, token0]);\n    this.pools.set(id2, [pool, token0]);\n    return [pool, token0];\n  }\n  async getReserves(chainId, pool) {\n    const client = getClient(chainId);\n    return await client.readContract({\n      address: pool,\n      abi: PoolContractABI,\n      functionName: \"getReserves\"\n    });\n  }\n};\n\n// libs/sdk/src/lib/tokens/token-rate/adapters/uniswap-v2-adapter.ts\nimport { ChainId } from \"@one-inch-community/models\";\nvar uniswapV2Adapter = new UniswapV2BaseRateAdapter(\n  \"UniswapV2\",\n  () => \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\",\n  [\n    ChainId.eth,\n    ChainId.bnb,\n    ChainId.matic,\n    ChainId.op,\n    ChainId.arbitrum,\n    ChainId.avalanche\n  ]\n);\n\n// libs/sdk/src/lib/tokens/token-rate/adapters/sushiswap-v2-adapter.ts\nimport { ChainId as ChainId2 } from \"@one-inch-community/models\";\nvar SushiSwapFactory = {\n  [ChainId2.eth]: \"0xC0AeE478e3658e2610c5F7A4A2E1777cE9e4f2Ac\",\n  [ChainId2.bnb]: \"0xc35dadb65012ec5796536bd9864ed8773abc74c4\",\n  [ChainId2.matic]: \"0xc35dadb65012ec5796536bd9864ed8773abc74c4\",\n  [ChainId2.gnosis]: \"0xc35dadb65012ec5796536bd9864ed8773abc74c4\",\n  [ChainId2.fantom]: \"0xc35dadb65012ec5796536bd9864ed8773abc74c4\",\n  [ChainId2.avalanche]: \"0xc35dadb65012ec5796536bd9864ed8773abc74c4\",\n  [ChainId2.arbitrum]: \"0xc35dadb65012ec5796536bd9864ed8773abc74c4\"\n};\nvar sushiswapV2Adapter = new UniswapV2BaseRateAdapter(\n  \"SushiSwapV2\",\n  (chainId) => SushiSwapFactory[chainId],\n  [\n    ChainId2.eth,\n    ChainId2.bnb,\n    ChainId2.matic,\n    ChainId2.gnosis,\n    ChainId2.fantom,\n    ChainId2.arbitrum,\n    ChainId2.avalanche\n  ]\n);\n\n// libs/sdk/src/lib/tokens/token-rate/adapters/pancakeswap-v2-adapter.ts\nimport { ChainId as ChainId3 } from \"@one-inch-community/models\";\nvar PancakeSwapFactory = {\n  [ChainId3.eth]: \"0x1097053Fd2ea711dad45caCcc45EfF7548fCB362\",\n  [ChainId3.bnb]: \"0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73\",\n  [ChainId3.arbitrum]: \"0x02a84c1b3BBD7401a5f7fa98a384EBC70bB5749E\"\n};\nvar pancakeswapV2Adapter = new UniswapV2BaseRateAdapter(\n  \"PancakeSwapV2\",\n  (chainId) => PancakeSwapFactory[chainId],\n  [\n    ChainId3.eth,\n    ChainId3.bnb,\n    ChainId3.arbitrum\n  ]\n);\n\n// libs/sdk/src/lib/tokens/token-rate/token-rate.provider.ts\nimport {\n  getBlockEmitter,\n  getWrapperNativeToken,\n  isNativeToken\n} from \"@one-inch-community/sdk/chain\";\nimport { startWith, switchMap } from \"rxjs\";\n\n// libs/sdk/src/lib/tokens/token-rate/adapters/uniswap-v3-adapter.ts\nimport { ChainId as ChainId4 } from \"@one-inch-community/models\";\n\n// libs/sdk/src/lib/tokens/token-rate/base-adapters/uniswap-v3-base-rate-adapter.ts\nimport { getAddress as getAddress2, isAddressEqual as isAddressEqual2, parseAbi as parseAbi2, zeroAddress as zeroAddress2 } from \"viem\";\nimport { getClient as getClient2 } from \"@one-inch-community/sdk/chain\";\nimport { LongTimeCache as LongTimeCache2 } from \"@one-inch-community/core/cache\";\nimport { BlockTimeCache } from \"@one-inch-community/sdk/chain\";\nimport { BigMath as BigMath2 } from \"@one-inch-community/core/math\";\nvar FactoryContractABI2 = parseAbi2([\n  \"function getPool(address tokenA, address tokenB, uint24 fee) external view returns (address pool)\"\n]);\nvar PoolContractABI2 = parseAbi2([\n  \"function liquidity() external view returns (uint128)\",\n  \"function slot0() external view returns (uint160 sqrtPriceX96, int24 tick, uint16 observationIndex, uint16 observationCardinality, uint16 observationCardinalityNext, uint8 feeProtocol, bool unlocked)\",\n  \"function token0() external view returns (address)\",\n  \"function token1() external view returns (address)\"\n]);\nvar UniswapV3BaseRateAdapter = class {\n  constructor(name, factoryContractGetter3, supportedChain, feeTiers) {\n    this.name = name;\n    this.factoryContractGetter = factoryContractGetter3;\n    this.supportedChain = supportedChain;\n    this.feeTiers = feeTiers;\n    this.pools = new LongTimeCache2(`${this.name}_pools`, 7);\n    this.liquidityCache = new BlockTimeCache();\n  }\n  isSupportedChain(chainId) {\n    return this.supportedChain.includes(chainId);\n  }\n  async getRate(chainId, sourceToken, destinationToken) {\n    try {\n      const srcTokenAddress = getAddress2(sourceToken.address);\n      const dstTokenAddress = getAddress2(destinationToken.address);\n      const [pool, token0] = await this.getPool(chainId, srcTokenAddress, dstTokenAddress);\n      if (pool === zeroAddress2) {\n        return null;\n      }\n      const isRevertRate = !isAddressEqual2(sourceToken.address, token0);\n      const [sqrtPriceX96, liquidity] = await Promise.all([\n        this.getSqrtPriceX96(chainId, pool),\n        this.getLiquidity(chainId, pool)\n      ]);\n      const [rate, revertedRate] = this.calculatePrice(sqrtPriceX96, sourceToken, destinationToken, liquidity, isRevertRate);\n      return {\n        chainId,\n        rate,\n        revertedRate,\n        sourceToken,\n        destinationToken,\n        isReverted: isRevertRate\n      };\n    } catch (error) {\n      console.error(`Error in UniswapV3BaseRateAdapter adapter name ${this.name}`, error);\n      return null;\n    }\n  }\n  async getPool(chainId, srcTokenAddress, dstTokenAddress) {\n    const id1 = [chainId, srcTokenAddress, dstTokenAddress].join(\":\");\n    if (this.pools.has(id1)) {\n      return this.pools.get(id1);\n    }\n    const id2 = [chainId, dstTokenAddress, srcTokenAddress].join(\":\");\n    if (this.pools.has(id2)) {\n      return this.pools.get(id2);\n    }\n    const client = getClient2(chainId);\n    let resultPool = zeroAddress2;\n    let maxLiquidity = 0n;\n    for (const fee of this.feeTiers) {\n      const pool = await client.readContract({\n        address: getAddress2(this.factoryContractGetter(chainId)),\n        functionName: \"getPool\",\n        args: [srcTokenAddress, dstTokenAddress, fee],\n        abi: FactoryContractABI2\n      });\n      if (pool === zeroAddress2) {\n        continue;\n      }\n      const liquidity = await this.getLiquidity(chainId, pool);\n      if (liquidity > maxLiquidity) {\n        maxLiquidity = liquidity;\n        resultPool = pool;\n      }\n    }\n    if (resultPool !== zeroAddress2) {\n      const token0 = await client.readContract({\n        address: resultPool,\n        abi: PoolContractABI2,\n        functionName: \"token0\"\n      });\n      this.pools.set(id1, [resultPool, token0]);\n      this.pools.set(id2, [resultPool, token0]);\n      return [resultPool, token0];\n    }\n    return [zeroAddress2, zeroAddress2];\n  }\n  async getSqrtPriceX96(chainId, pool) {\n    const client = getClient2(chainId);\n    const [sqrtPriceX96] = await client.readContract({\n      address: pool,\n      abi: PoolContractABI2,\n      functionName: \"slot0\"\n    });\n    return sqrtPriceX96;\n  }\n  async getLiquidity(chainId, pool) {\n    const result = this.liquidityCache.get(chainId, pool);\n    if (result) {\n      return result;\n    }\n    const client = getClient2(chainId);\n    const liquidity = await client.readContract({\n      address: pool,\n      functionName: \"liquidity\",\n      abi: PoolContractABI2\n    });\n    this.liquidityCache.set(chainId, pool, liquidity);\n    return liquidity;\n  }\n  calculatePrice(sqrtPriceX96, sourceToken, destinationToken, liquidity, isRevertRate) {\n    const Q96 = 2n ** 96n;\n    const sourceTokenAmount = liquidity * Q96 / sqrtPriceX96;\n    const destinationTokenAmount = liquidity * sqrtPriceX96 / Q96;\n    return [\n      BigMath2.div(\n        isRevertRate ? sourceTokenAmount : destinationTokenAmount,\n        isRevertRate ? destinationTokenAmount : sourceTokenAmount,\n        destinationToken.decimals,\n        sourceToken.decimals,\n        destinationToken.decimals\n      ),\n      BigMath2.div(\n        isRevertRate ? destinationTokenAmount : sourceTokenAmount,\n        isRevertRate ? sourceTokenAmount : destinationTokenAmount,\n        sourceToken.decimals,\n        destinationToken.decimals,\n        sourceToken.decimals\n      )\n    ];\n  }\n};\n\n// libs/sdk/src/lib/tokens/token-rate/adapters/uniswap-v3-adapter.ts\nfunction factoryContractGetter(chainId) {\n  if (chainId === ChainId4.bnb) return \"0xdB1d10011AD0Ff90774D0C6Bb92e5C5c8b4461F7\";\n  if (chainId === ChainId4.avalanche) return \"0x740b1c1de25031C31FF4fC9A62f554A55cdC1baD\";\n  return \"0x1F98431c8aD98523631AE4a59f267346ea31F984\";\n}\nvar uniswapV3Adapter = new UniswapV3BaseRateAdapter(\n  \"UniswapV3\",\n  factoryContractGetter,\n  [\n    ChainId4.eth,\n    ChainId4.bnb,\n    ChainId4.matic,\n    ChainId4.op,\n    ChainId4.arbitrum,\n    ChainId4.avalanche\n  ],\n  [100, 500, 3e3, 1e4]\n);\n\n// libs/sdk/src/lib/tokens/token-rate/adapters/pancakeswap-v3-adapter.ts\nimport { ChainId as ChainId5 } from \"@one-inch-community/models\";\nfunction factoryContractGetter2(chainId) {\n  if (chainId === ChainId5.zkSyncEra) return \"0x1BB72E0CbbEA93c08f535fc7856E0338D7F7a8aB\";\n  return \"0x0BFbCF9fa4f9C56B0F40a671Ad40E0805A091865\";\n}\nvar pancakeswapV3Adapter = new UniswapV3BaseRateAdapter(\n  \"PancakeSwapV3\",\n  factoryContractGetter2,\n  [\n    ChainId5.eth,\n    ChainId5.bnb,\n    ChainId5.arbitrum,\n    ChainId5.zkSyncEra\n  ],\n  [100, 500, 2500, 1e4]\n);\n\n// libs/sdk/src/lib/tokens/token-rate/adapters/sushiswap-v3-adapter.ts\nimport { ChainId as ChainId6 } from \"@one-inch-community/models\";\nvar SushiSwapFactory2 = {\n  [ChainId6.eth]: \"0xbACEB8eC6b9355Dfc0269C18bac9d6E2Bdc29C4F\",\n  [ChainId6.bnb]: \"0x126555dd55a39328F69400d6aE4F782Bd4C34ABb\",\n  [ChainId6.matic]: \"0x917933899c6a5F8E37F31E19f92CdBFF7e8FF0e2\",\n  [ChainId6.gnosis]: \"0xf78031CBCA409F2FB6876BDFDBc1b2df24cF9bEf\",\n  [ChainId6.fantom]: \"0x7770978eED668a3ba661d51a773d3a992Fc9DDCB\",\n  [ChainId6.avalanche]: \"0x3e603C14aF37EBdaD31709C4f848Fc6aD5BEc715\",\n  [ChainId6.arbitrum]: \"0x1af415a1EbA07a4986a52B6f2e7dE7003D82231e\",\n  [ChainId6.op]: \"0x9c6522117e2ed1fE5bdb72bb0eD5E3f2bdE7DBe0\"\n};\nvar sushiswapV3Adapter = new UniswapV3BaseRateAdapter(\n  \"SushiSwapV3\",\n  (chainId) => SushiSwapFactory2[chainId],\n  [\n    ChainId6.eth,\n    ChainId6.bnb,\n    ChainId6.op,\n    ChainId6.matic,\n    ChainId6.gnosis,\n    ChainId6.fantom,\n    ChainId6.arbitrum,\n    ChainId6.avalanche\n  ],\n  [100, 500, 3e3, 1e4]\n);\n\n// libs/sdk/src/lib/tokens/token-rate/adapters/spookyswap-v3-adapter.ts\nimport { ChainId as ChainId7 } from \"@one-inch-community/models\";\nvar spookyswapV3Adapter = new UniswapV3BaseRateAdapter(\n  \"SpookySwapV3\",\n  () => \"0x7928a2c48754501f3a8064765ECaE541daE5c3E6\",\n  [\n    ChainId7.fantom\n  ],\n  [100, 500, 3e3, 1e4]\n);\n\n// libs/sdk/src/lib/tokens/token-rate/token-rate.provider.ts\nimport { BlockTimeCache as BlockTimeCache2 } from \"@one-inch-community/sdk/chain\";\nimport { CacheActivePromise } from \"@one-inch-community/core/decorators\";\nvar TokenRateProvider = class {\n  constructor(onChainAdapters) {\n    this.onChainAdapters = onChainAdapters;\n    this.rateCache = new BlockTimeCache2();\n  }\n  async getOnChainRate(chainId, sourceToken, destinationToken) {\n    const rate = await this.getOnChainRawRate(chainId, sourceToken, destinationToken);\n    if (rate.length === 0) return null;\n    const getRateVale = (rate2) => rate2.isReverted ? rate2.revertedRate : rate2.rate;\n    let maxRate = rate[0];\n    for (const item of rate) {\n      if (getRateVale(item) > getRateVale(maxRate)) {\n        maxRate = item;\n      }\n    }\n    return maxRate;\n  }\n  listenOnChainRate(chainId, sourceToken, destinationToken) {\n    return getBlockEmitter(chainId).pipe(\n      startWith(null),\n      switchMap(() => this.getOnChainRate(chainId, sourceToken, destinationToken))\n    );\n  }\n  async getOnChainRawRate(chainId, sourceToken, destinationToken) {\n    let _srcToken = sourceToken;\n    let _dstToken = destinationToken;\n    if (isNativeToken(sourceToken.address)) {\n      const wToken = getWrapperNativeToken(chainId);\n      if (!wToken) return [];\n      _srcToken = wToken;\n    }\n    if (isNativeToken(destinationToken.address)) {\n      const wToken = getWrapperNativeToken(chainId);\n      if (!wToken) return [];\n      _dstToken = wToken;\n    }\n    const id = [_srcToken.address, _dstToken.address].join(\":\");\n    const cacheRateList = this.rateCache.get(chainId, id);\n    if (cacheRateList !== null) {\n      return cacheRateList;\n    }\n    const sources = this.onChainAdapters.filter((source) => source.isSupportedChain(chainId));\n    const rateResultList = await Promise.all(sources.map((source) => source.getRate(chainId, _srcToken, _dstToken)));\n    const cleanRateList = rateResultList.filter((rate) => rate !== null);\n    this.rateCache.set(chainId, id, cleanRateList);\n    return cleanRateList;\n  }\n};\n__decorateClass([\n  CacheActivePromise((_, chainId, sourceToken, destinationToken) => [chainId, sourceToken.address, destinationToken.address].join(\":\"))\n], TokenRateProvider.prototype, \"getOnChainRate\", 1);\nfunction buildDefaultTokenRateProvider() {\n  return new TokenRateProvider([\n    // oneInchOracleAdapter,\n    // v3\n    uniswapV3Adapter,\n    pancakeswapV3Adapter,\n    sushiswapV3Adapter,\n    spookyswapV3Adapter,\n    // v2\n    uniswapV2Adapter,\n    sushiswapV2Adapter,\n    pancakeswapV2Adapter\n  ]);\n}\n\n// libs/sdk/src/lib/tokens/token-usd-on-chain-price.provider.ts\nimport { ChainId as ChainId8 } from \"@one-inch-community/models\";\nimport { formatUnits, isAddressEqual as isAddressEqual3 } from \"viem\";\nvar USDTAddresses = {\n  [ChainId8.eth]: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n  [ChainId8.bnb]: \"0x55d398326f99059ff775485246999027b3197955\",\n  [ChainId8.matic]: \"0xc2132d05d31c914a87c6611c10748aeb04b58e8f\",\n  [ChainId8.op]: \"0x94b008aa00579c1307b0ef2c499ad98a8ce58e58\",\n  [ChainId8.arbitrum]: \"0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9\",\n  [ChainId8.gnosis]: \"0x4ecaba5870353805a9f068101a40e0f32ed605c6\",\n  [ChainId8.avalanche]: \"0xc7198437980c041c805a1edcba50c1ce5db95118\",\n  [ChainId8.fantom]: \"0xcc1b99ddac1a33c201a742a1851662e87bc7f22c\",\n  [ChainId8.aurora]: \"0x4988a896b1227218e4a686fde5eabdcabd91571f\",\n  [ChainId8.klaytn]: \"0x754288077d0ff82af7a5317c7cb8c444d421d103\",\n  // USDC\n  [ChainId8.zkSyncEra]: \"0x493257fd37edb34451f62edf8d2a0c418852ba4c\"\n};\nvar decimals = 6;\nvar TokenUsdOnChainPriceProvider = class {\n  constructor() {\n    this.rateProvider = buildDefaultTokenRateProvider();\n  }\n  async getPrice(chainId, token) {\n    const USDTAddress = USDTAddresses[chainId];\n    if (isAddressEqual3(token.address, USDTAddress)) {\n      return \"1\";\n    }\n    const rate = await this.rateProvider.getOnChainRate(\n      chainId,\n      { address: USDTAddress, chainId, decimals, name: \"USDT\", symbol: \"USDT\" },\n      token\n    );\n    if (!rate) return \"0\";\n    return formatUnits(rate.rate, token.decimals);\n  }\n};\n\n// libs/sdk/src/lib/tokens/token.schema.ts\nimport { isAddressEqual as isAddressEqual4 } from \"viem\";\nimport { nativeTokenAddress } from \"@one-inch-community/sdk/chain\";\nimport { QueueCache } from \"@one-inch-community/core/cache\";\nvar TokenPriority = {\n  \"native\": 1e3,\n  \"USDT\": 100,\n  \"USDC\": 100,\n  \"WETH\": 62,\n  \"1INCH\": 61,\n  \"PEG:ETH\": 60,\n  \"PEG:USD\": 50,\n  \"PEG:BTC\": 40,\n  \"PEG:EUR\": 30,\n  \"staking\": 20,\n  \"savings\": 10,\n  \"tokens\": 0\n};\nvar TokenSchema = class _TokenSchema {\n  constructor() {\n    this.tokenCache = new QueueCache(50);\n  }\n  static {\n    this.databaseVersion = 4;\n  }\n  get tokens() {\n    if (!this.database) throw new Error(\"token database not init\");\n    return this.database.tokens;\n  }\n  get balances() {\n    if (!this.database) throw new Error(\"token database not init\");\n    return this.database.balances;\n  }\n  async init() {\n    const Dexie = await import(\"dexie\").then((m) => m.Dexie);\n    const db = new Dexie(\"one-inch-token\");\n    db.version(_TokenSchema.databaseVersion).stores({\n      tokens: [\n        \"id\",\n        // 'chainId:address'\n        \"address\",\n        \"decimals\",\n        \"chainId\",\n        \"name\",\n        \"symbol\",\n        \"*tags\",\n        \"eip2612\",\n        \"logoURL\",\n        \"isFavorite\",\n        \"priority\"\n      ].join(\", \"),\n      balances: [\n        \"id\",\n        // 'chainId:walletAddress:tokenAddress'\n        \"chainId\",\n        \"tokenAddress\",\n        \"walletAddress\",\n        \"amount\"\n      ].join(\", \")\n    });\n    this.database = db;\n  }\n  async getToken(chainId, address) {\n    const recordId = getId(chainId, address);\n    if (this.tokenCache.has(recordId)) {\n      return this.tokenCache.get(recordId);\n    }\n    const records = await this.tokens.where(\"id\").equals(recordId).toArray();\n    this.tokenCache.set(recordId, records[0]);\n    return records[0] ?? null;\n  }\n  async getNativeToken(chainId) {\n    return this.getToken(chainId, nativeTokenAddress);\n  }\n  getTokenBySymbol(chainId, symbol) {\n    return this.tokens.where(\"chainId\").equals(chainId).filter((record) => record.symbol === symbol).toArray();\n  }\n  async getTokenMap(chainId, addresses) {\n    const addressesSet = new Set(addresses);\n    const result = {};\n    await this.tokens.each((record) => {\n      if (record.chainId === chainId && addressesSet.has(record.address)) {\n        result[record.address] = record;\n      }\n    });\n    return result;\n  }\n  getTokenList(chainId, addresses) {\n    const addressesSet = new Set(addresses);\n    return this.tokens.filter((record) => record.chainId === chainId && addressesSet.has(record.address)).toArray();\n  }\n  async getTokenBalanceMap(chainId, walletAddress, addresses) {\n    const addressesSet = new Set(addresses);\n    const result = {};\n    await this.balances.each((record) => {\n      if (record.chainId === chainId && record.walletAddress === walletAddress && addressesSet.has(record.tokenAddress)) {\n        result[record.tokenAddress] = BigInt(record.amount);\n      }\n    });\n    return result;\n  }\n  async getTokens(chainId, addresses) {\n    const addressesSet = new Set(addresses);\n    return this.tokens.filter((record) => record.chainId === chainId && addressesSet.has(record.address)).toArray();\n  }\n  async getAllTokenAddresses(chainId) {\n    const result = [];\n    await this.tokens.where(\"chainId\").equals(chainId).each((record) => result.push(record.address));\n    return result;\n  }\n  async getTokenBalance(chainId, tokenAddress, walletAddress) {\n    const recordId = getId(chainId, walletAddress, tokenAddress);\n    const records = await this.balances.where(\"id\").equals(recordId).toArray();\n    return records[0] ?? null;\n  }\n  async isEmptyTokenBalanceStorage(chainId, walletAddress) {\n    return this.balances.filter((record) => record.chainId === chainId && isAddressEqual4(record.walletAddress, walletAddress)).toArray().then((list) => list.length === 0);\n  }\n  async setTokens(chainId, tokens) {\n    const tableTokens = [];\n    for (const token of tokens) {\n      tableTokens.push({\n        id: getId(chainId, token.address),\n        address: token.address,\n        decimals: token.decimals,\n        eip2612: token.extensions?.eip2612 ?? null,\n        name: token.name,\n        symbol: token.symbol,\n        tags: token.tags,\n        logoURL: token.logoURI,\n        isFavorite: false,\n        chainId,\n        priority: calcTokenPriority(token)\n      });\n    }\n    this.tokenCache.clear();\n    await this.tokens.bulkPut(tableTokens);\n  }\n  async setBalances(chainId, walletAddress, balances) {\n    const balancesRecords = [];\n    for (const address in balances) {\n      const tokenAddress = address;\n      balancesRecords.push({\n        id: getId(chainId, walletAddress, tokenAddress),\n        chainId,\n        tokenAddress,\n        walletAddress,\n        amount: balances[tokenAddress]\n      });\n    }\n    await this.balances.bulkPut(balancesRecords);\n  }\n  async getAllFavoriteTokenAddresses(chainId) {\n    const result = [];\n    await this.tokens.where(\"chainId\").equals(chainId).each((record) => {\n      if (!record.isFavorite) return;\n      result.push(record.address);\n    });\n    return result;\n  }\n  async getSortedByPriorityAndBalanceTokenAddresses(chainId, filterPattern, walletAddress) {\n    const balances = {};\n    const priority = {};\n    const favoriteTokenSet = /* @__PURE__ */ new Set();\n    const notZero = [];\n    const zero = [];\n    const _filterPattern = filterPattern.toLowerCase();\n    if (walletAddress) {\n      await this.balances.where(\"chainId\").equals(chainId).and((record) => isAddressEqual4(record.walletAddress, walletAddress)).each((record) => balances[record.tokenAddress] = BigInt(record.amount));\n    }\n    await this.tokens.where(\"chainId\").equals(chainId).each((record) => {\n      if (_filterPattern !== \"\") {\n        if (!record.address.toLowerCase().includes(_filterPattern) && !record.name.toLowerCase().startsWith(_filterPattern) && !record.symbol.toLowerCase().startsWith(_filterPattern)) return;\n      }\n      if (balances[record.address] && balances[record.address] > 0n) {\n        notZero.push(record.address);\n        return;\n      }\n      priority[record.address] = record.priority;\n      zero.push(record.address);\n      record.isFavorite && favoriteTokenSet.add(record.address);\n    });\n    return {\n      notZero,\n      zero: zero.sort((address1, address2) => {\n        const priority1 = priority[address1];\n        const priority2 = priority[address2];\n        const isFavoriteToken1 = favoriteTokenSet.has(address1);\n        const isFavoriteToken2 = favoriteTokenSet.has(address2);\n        if (isFavoriteToken1 === isFavoriteToken2) {\n          if (priority1 < priority2) {\n            return 1;\n          }\n          if (priority1 > priority2) {\n            return -1;\n          }\n          return 0;\n        }\n        if (isFavoriteToken1) {\n          return -1;\n        }\n        if (isFavoriteToken2) {\n          return 1;\n        }\n        return 0;\n      })\n    };\n  }\n  async setFavoriteState(chainId, tokenAddress, state) {\n    const recordId = getId(chainId, tokenAddress);\n    this.tokenCache.delete(recordId);\n    await this.tokens.update(recordId, { isFavorite: state });\n  }\n  async setEip2612Support(chainId, address, state) {\n    const recordId = getId(chainId, address);\n    await this.tokens.update(recordId, { eip2612: state });\n  }\n};\nfunction getId(...args) {\n  return args.join(\":\");\n}\nfunction calcTokenPriority(dto) {\n  let priority = dto.providers?.length ?? 0;\n  priority += TokenPriority[dto.symbol] ?? 0;\n  for (const tag of dto.tags) {\n    priority += TokenPriority[tag] ?? 0;\n  }\n  return priority;\n}\n\n// libs/sdk/src/lib/tokens/token.controller.ts\nimport { formatUnits as formatUnits2 } from \"viem\";\n\n// libs/sdk/src/lib/chain/average-block-time.ts\nimport { ChainId as ChainId9 } from \"@one-inch-community/models\";\nvar averageBlockTime = {\n  [ChainId9.eth]: 11e3,\n  [ChainId9.bnb]: 3e3,\n  [ChainId9.matic]: 3e3,\n  [ChainId9.op]: 3e3,\n  [ChainId9.arbitrum]: 3e3,\n  [ChainId9.gnosis]: 5e3,\n  [ChainId9.avalanche]: 3e3,\n  [ChainId9.fantom]: 3e3,\n  [ChainId9.aurora]: 3e3,\n  [ChainId9.klaytn]: 3e3,\n  [ChainId9.zkSyncEra]: 3e3\n};\n\n// libs/sdk/src/lib/tokens/token.controller.ts\nimport { liveQuery } from \"dexie\";\nimport { storage, JsonParser } from \"@one-inch-community/core/storage\";\nimport { CacheActivePromise as CacheActivePromise2 } from \"@one-inch-community/core/decorators\";\nimport { isSupportedEIP2612 } from \"@one-inch-community/sdk/chain\";\nimport { getBalances } from \"@one-inch-community/sdk/chain\";\nimport { defer } from \"rxjs\";\nvar lastUpdateTokenDatabaseTimestampStorageKey = `last-update-token-database-timestamp-v${TokenSchema.databaseVersion}`;\nvar lastUpdateTokenBalanceDatabaseTimestampStorageKey = `last-update-token-balance-database-timestamp-v${TokenSchema.databaseVersion}`;\nvar tokenDatabaseTTL = 6048e5;\nvar tokenBalanceDatabaseTTL = averageBlockTime;\nvar TokenController = class {\n  constructor() {\n    this.schema = new TokenSchema();\n    this.tokenUsdPriceProvider = new TokenUsdOnChainPriceProvider();\n    this.lastUpdateTokenDatabaseTimestampStorage = storage.get(lastUpdateTokenDatabaseTimestampStorageKey, JsonParser);\n    this.lastUpdateTokenBalanceDatabaseTimestampStorage = storage.get(lastUpdateTokenBalanceDatabaseTimestampStorageKey, JsonParser);\n  }\n  async init(context) {\n    this.context = context;\n    this.oneInchApiAdapter = context.oneInchDevPortalAdapter;\n    await this.schema.init();\n  }\n  /**\n   * Retrieves sorted by balances and priority token addresses.\n   *\n   * @param {ChainId} chainId - The ID of the chain.\n   * @param {String} [filterPattern] - pattern for find token buy name or address\n   * @param {Address} [walletAddress] - The connected wallet address. (Optional)\n   * @returns {Promise<Address[]>} - A promise that resolves to an array of sorted token addresses.\n   */\n  async getSortedByPriorityAndBalanceTokenAddresses(chainId, filterPattern, walletAddress) {\n    await this.updateTokenDatabase(chainId);\n    if (walletAddress) {\n      await this.updateBalanceDatabase(chainId, walletAddress);\n    }\n    const result = await this.schema.getSortedByPriorityAndBalanceTokenAddresses(chainId, filterPattern, walletAddress);\n    if (walletAddress) {\n      const prices = await this.getTokenUSDPrices(chainId, result.notZero);\n      const tokens = await this.getTokenMap(chainId, result.notZero);\n      const balances = await this.getTokenBalanceMap(chainId, walletAddress, result.notZero);\n      const favoriteTokenList = await this.getAllFavoriteTokenAddresses(chainId);\n      const favoriteTokenSet = new Set(favoriteTokenList);\n      const tokenAmount = {};\n      for (const address of result.notZero) {\n        const token = tokens[address];\n        const tokenPrice = prices[address];\n        const balance = formatUnits2(balances[address], token.decimals);\n        tokenAmount[address] = Number(balance) * Number(tokenPrice);\n      }\n      return [\n        ...result.notZero.sort((address1, address2) => {\n          const isFavoriteToken1 = favoriteTokenSet.has(address1);\n          const isFavoriteToken2 = favoriteTokenSet.has(address2);\n          if (isFavoriteToken1 === isFavoriteToken2) {\n            return tokenAmount[address2] - tokenAmount[address1];\n          }\n          if (isFavoriteToken1) {\n            return -1;\n          }\n          return 1;\n        }),\n        ...result.zero\n      ];\n    }\n    return [\n      ...result.notZero,\n      ...result.zero\n    ];\n  }\n  async getToken(chainId, address) {\n    await this.updateTokenDatabase(chainId);\n    return await this.schema.getToken(chainId, address);\n  }\n  async getNativeToken(chainId) {\n    await this.updateTokenDatabase(chainId);\n    return await this.schema.getNativeToken(chainId);\n  }\n  async getTokenBySymbol(chainId, symbol) {\n    await this.updateTokenDatabase(chainId);\n    return this.schema.getTokenBySymbol(chainId, symbol);\n  }\n  async getTokenList(chainId, addresses) {\n    await this.updateTokenDatabase(chainId);\n    return await this.schema.getTokenList(chainId, addresses);\n  }\n  async getTokenListSortedByPriority(chainId, addresses) {\n    const tokens = await this.getTokenList(chainId, addresses);\n    return tokens.sort((token1, token2) => token2.priority - token1.priority);\n  }\n  async getTokenMap(chainId, addresses) {\n    return await this.schema.getTokenMap(chainId, addresses);\n  }\n  async getTokenBalanceMap(chainId, walletAddress, addresses) {\n    await this.updateBalanceDatabase(chainId, walletAddress);\n    return await this.schema.getTokenBalanceMap(chainId, walletAddress, addresses);\n  }\n  async getTokenBalance(chainId, tokenAddress, walletAddress) {\n    await this.updateBalanceDatabase(chainId, walletAddress, tokenAddress);\n    return await this.schema.getTokenBalance(chainId, tokenAddress, walletAddress);\n  }\n  async getTokenUSDPrice(chainId, tokenAddress) {\n    const result = await this.getTokenUSDPrices(chainId, [tokenAddress]);\n    return result[tokenAddress];\n  }\n  async isFavoriteToken(chainId, tokenAddress) {\n    const token = await this.getToken(chainId, tokenAddress);\n    return token?.isFavorite ?? false;\n  }\n  async getTokenLogoURL(chainId, tokenAddress) {\n    const token = await this.getToken(chainId, tokenAddress);\n    return token?.logoURL ?? null;\n  }\n  async getPriorityToken(chainId, addresses) {\n    const tokens = await this.getTokenList(chainId, addresses);\n    const isStable = (token) => token.tags.includes(\"PEG:USD\") || token.tags.includes(\"PEG:EUR\");\n    return tokens.sort((record1, record2) => {\n      const isStable1 = isStable(record1);\n      const isStable2 = isStable(record2);\n      if (isStable1 && isStable2) {\n        return record1.priority - record2.priority;\n      }\n      if (isStable1 && !isStable2) {\n        return -1;\n      }\n      if (!isStable1 && isStable2) {\n        return 1;\n      }\n      return record1.priority - record2.priority;\n    })[0];\n  }\n  async setFavoriteState(chainId, tokenAddress, state) {\n    await this.schema.setFavoriteState(chainId, tokenAddress, state);\n  }\n  async getAllFavoriteTokenAddresses(chainId) {\n    return await this.schema.getAllFavoriteTokenAddresses(chainId);\n  }\n  async getTokenUSDPrices(chainId, tokenAddressList) {\n    const result = {};\n    const prices = await this.oneInchApiAdapter.getTokenPrices(chainId).catch(() => null);\n    if (prices === null) {\n      const tokens = await this.schema.getTokens(chainId, tokenAddressList);\n      await Promise.all(\n        tokens.map((token) => this.tokenUsdPriceProvider.getPrice(chainId, token).catch(() => \"0\").then((price) => result[token.address] = price))\n      );\n      return result;\n    }\n    for (const address of tokenAddressList) {\n      result[address] = prices[address] ?? \"0\";\n    }\n    return result;\n  }\n  async isSupportedTokenPermit(chainId, tokenAddress) {\n    const token = await this.schema.getToken(chainId, tokenAddress);\n    if (!token) return false;\n    if (token.eip2612 === null) {\n      const state = await isSupportedEIP2612(chainId, tokenAddress);\n      await this.schema.setEip2612Support(chainId, tokenAddress, state);\n      return state;\n    }\n    return token.eip2612;\n  }\n  async updateTokenDatabase(chainId) {\n    const lastUpdateTime = this.lastUpdateTokenDatabaseTimestampStorage?.[chainId];\n    if (lastUpdateTime && Date.now() - lastUpdateTime < tokenDatabaseTTL) return;\n    const tokens = await this.oneInchApiAdapter.getWhiteListedTokens(chainId);\n    await this.schema.setTokens(chainId, tokens);\n    storage.updateEntity(lastUpdateTokenDatabaseTimestampStorageKey, chainId.toString(), Date.now());\n    this.lastUpdateTokenDatabaseTimestampStorage = storage.get(lastUpdateTokenDatabaseTimestampStorageKey, JsonParser);\n  }\n  async updateBalanceDatabase(chainId, walletAddress, tokenAddress) {\n    const id = [chainId, walletAddress].join(\":\");\n    const lastUpdateTime = this.lastUpdateTokenBalanceDatabaseTimestampStorage?.[id];\n    if (lastUpdateTime && Date.now() - lastUpdateTime < tokenBalanceDatabaseTTL[chainId]) return;\n    const update = async () => {\n      let balances = await this.oneInchApiAdapter.getBalancesByWalletAddress(chainId, walletAddress).catch(() => null);\n      if (balances === null) {\n        balances = await this.getBalancesOnChain(chainId, walletAddress);\n      }\n      await this.schema.setBalances(chainId, walletAddress, balances);\n      storage.updateEntity(lastUpdateTokenBalanceDatabaseTimestampStorageKey, id, Date.now());\n      this.lastUpdateTokenBalanceDatabaseTimestampStorage = storage.get(lastUpdateTokenBalanceDatabaseTimestampStorageKey, JsonParser);\n    };\n    if (tokenAddress) {\n      const tokenBalances = await this.schema.getTokenBalance(chainId, tokenAddress, walletAddress);\n      if (tokenBalances === null) return await update();\n    } else if (await this.schema.isEmptyTokenBalanceStorage(chainId, walletAddress)) {\n      return await update();\n    }\n    update().catch((error) => console.error(error));\n  }\n  liveQuery(querier) {\n    return defer(() => liveQuery(querier));\n  }\n  async getBalancesOnChain(chainId, walletAddress) {\n    const tokens = await this.schema.getAllTokenAddresses(chainId);\n    return getBalances(chainId, walletAddress, tokens);\n  }\n};\n__decorateClass([\n  CacheActivePromise2()\n], TokenController.prototype, \"updateTokenDatabase\", 1);\n__decorateClass([\n  CacheActivePromise2()\n], TokenController.prototype, \"updateBalanceDatabase\", 1);\n\n// libs/sdk/src/lib/tokens/is-tokens-equal.ts\nimport { isAddressEqual as isAddressEqual5 } from \"viem\";\nfunction isTokensEqual(token1, token2) {\n  const isAddressMatching = isAddressEqual5(token1.address, token2.address);\n  const isChainIdMatching = token1.chainId === token2.chainId;\n  return isAddressMatching && isChainIdMatching;\n}\n\n// libs/sdk/src/lib/tokens/is-rate-equal.ts\nfunction isRateEqual(rate1, rate2) {\n  return rate1.rate === rate2.rate && rate1.chainId === rate2.chainId && rate1.revertedRate === rate2.revertedRate && isTokensEqual(rate1.sourceToken, rate2.sourceToken) && isTokensEqual(rate1.destinationToken, rate2.destinationToken);\n}\nexport {\n  TokenController,\n  TokenRateProvider,\n  TokenUsdOnChainPriceProvider,\n  buildDefaultTokenRateProvider,\n  isRateEqual,\n  isTokensEqual\n};\n//# sourceMappingURL=index.esm.js.map\n"],"file":"assets/index.esm-DzZ8BT1s.js"}