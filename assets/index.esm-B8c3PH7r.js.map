{"version":3,"file":"index.esm-B8c3PH7r.js","sources":["../../../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/withLatestFrom.js","../../../libs/sdk/swap/index.esm.js"],"sourcesContent":["import { __read, __spreadArray } from \"tslib\";\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { identity } from '../util/identity';\nimport { noop } from '../util/noop';\nimport { popResultSelector } from '../util/args';\nexport function withLatestFrom() {\n    var inputs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        inputs[_i] = arguments[_i];\n    }\n    var project = popResultSelector(inputs);\n    return operate(function (source, subscriber) {\n        var len = inputs.length;\n        var otherValues = new Array(len);\n        var hasValue = inputs.map(function () { return false; });\n        var ready = false;\n        var _loop_1 = function (i) {\n            innerFrom(inputs[i]).subscribe(createOperatorSubscriber(subscriber, function (value) {\n                otherValues[i] = value;\n                if (!ready && !hasValue[i]) {\n                    hasValue[i] = true;\n                    (ready = hasValue.every(identity)) && (hasValue = null);\n                }\n            }, noop));\n        };\n        for (var i = 0; i < len; i++) {\n            _loop_1(i);\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            if (ready) {\n                var values = __spreadArray([value], __read(otherValues));\n                subscriber.next(project ? project.apply(void 0, __spreadArray([], __read(values))) : values);\n            }\n        }));\n    });\n}\n//# sourceMappingURL=withLatestFrom.js.map","// libs/sdk/src/lib/swap/swap-context.ts\nimport {\n  defer,\n  distinctUntilChanged as distinctUntilChanged2,\n  map as map2,\n  merge,\n  Subscription as Subscription2,\n  switchMap as switchMap2,\n  tap as tap2,\n  combineLatest,\n  withLatestFrom,\n  debounceTime,\n  of,\n  startWith as startWith3,\n  shareReplay as shareReplay2,\n  BehaviorSubject,\n  firstValueFrom,\n  Subject as Subject3,\n  subscribeOn,\n  asyncScheduler\n} from \"rxjs\";\n\n// libs/sdk/src/lib/swap/token-context.ts\nimport { distinctUntilChanged, map, shareReplay, startWith, Subject } from \"rxjs\";\nimport { isTokensEqual } from \"@one-inch-community/sdk/tokens\";\nvar TokenContext = class {\n  constructor() {\n    this.lastSnapshot = { token: null, amount: null };\n    this.signalChange$ = new Subject();\n  }\n  setToken(token) {\n    const { token: tokenFromSnap } = this.lastSnapshot;\n    if (tokenFromSnap && token && isTokensEqual(tokenFromSnap, token)) {\n      return;\n    }\n    this.lastSnapshot = { ...this.lastSnapshot, token, amount: 0n };\n    this.signalChange$.next();\n  }\n  setAmount(amount) {\n    const { amount: amountFromSnap } = this.lastSnapshot;\n    if (amountFromSnap === amount) {\n      return;\n    }\n    this.lastSnapshot = { ...this.lastSnapshot, amount };\n    this.signalChange$.next();\n  }\n  getSnapshot() {\n    return this.lastSnapshot;\n  }\n  streamSnapshot() {\n    return this.signalChange$.pipe(\n      map(() => this.lastSnapshot),\n      startWith(this.lastSnapshot),\n      distinctUntilChanged(),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n  }\n};\n\n// libs/sdk/src/lib/swap/pair-holder.ts\nimport { startWith as startWith2, Subject as Subject2, Subscription, switchMap } from \"rxjs\";\nimport { JsonParser } from \"@one-inch-community/core/storage\";\n\n// libs/sdk/src/lib/chain/is-chain-id.ts\nimport { ChainId } from \"@one-inch-community/models\";\nfunction isChainId(chainId) {\n  return ChainId[chainId] !== void 0;\n}\n\n// libs/sdk/src/lib/tokens/is-tokens-equal.ts\nimport { isAddressEqual } from \"viem\";\nfunction isTokensEqual2(token1, token2) {\n  const isAddressMatching = isAddressEqual(token1.address, token2.address);\n  const isChainIdMatching = token1.chainId === token2.chainId;\n  return isAddressMatching && isChainIdMatching;\n}\n\n// libs/sdk/src/lib/swap/pair-holder.ts\nvar PairHolder = class {\n  constructor(applicationContext) {\n    this.applicationContext = applicationContext;\n    this.subscription = new Subscription();\n    this.source = new TokenContext();\n    this.destination = new TokenContext();\n    this.pairChance$ = new Subject2();\n  }\n  init() {\n    this.restorePair();\n    this.startChainTokenSync();\n  }\n  restorePair() {\n    this.restoreToken(\"source\");\n    this.restoreToken(\"destination\");\n  }\n  switchPair() {\n    const { source, destination } = this;\n    this.source = destination;\n    this.destination = source;\n    this.updateTokenStore(\"source\");\n    this.updateTokenStore(\"destination\");\n    this.pairChance$.next();\n  }\n  setPair(pair) {\n    this.setTokenInner(pair.source, \"source\");\n    this.setTokenInner(pair.destination, \"destination\");\n    this.pairChance$.next();\n  }\n  setToken(token, tokenType) {\n    if (tokenType === \"source\" && token !== null) {\n      const destinationTokenSnap = this.destination.getSnapshot();\n      if (destinationTokenSnap.token !== null && isTokensEqual2(token, destinationTokenSnap.token)) {\n        return this.switchPair();\n      }\n    }\n    if (tokenType === \"destination\" && token !== null) {\n      const sourceTokenSnap = this.source.getSnapshot();\n      if (sourceTokenSnap.token !== null && isTokensEqual2(token, sourceTokenSnap.token)) {\n        return this.switchPair();\n      }\n    }\n    this.setTokenInner(token, tokenType);\n  }\n  setAmount(tokenType, value) {\n    this.getTokenContext(tokenType).setAmount(value);\n    this.updateTokenStore(tokenType);\n  }\n  streamSnapshot(tokenType) {\n    return this.pairChance$.pipe(\n      startWith2(null),\n      switchMap(() => this.getTokenContext(tokenType).streamSnapshot())\n    );\n  }\n  getSnapshot(tokenType) {\n    return this.getTokenContext(tokenType).getSnapshot();\n  }\n  destroy() {\n    this.subscription.unsubscribe();\n  }\n  setTokenInner(token, tokenType) {\n    this.getTokenContext(tokenType).setToken(token);\n    this.updateTokenStore(tokenType);\n  }\n  getTokenContext(tokenType) {\n    if (tokenType === \"source\") {\n      return this.source;\n    }\n    if (tokenType === \"destination\") {\n      return this.destination;\n    }\n    throw new Error(`invalid token type ${tokenType}`);\n  }\n  updateTokenStore(tokenType) {\n    const tokenContext = this.getTokenContext(tokenType);\n    const snapshot = tokenContext.getSnapshot();\n    const amount = snapshot.amount;\n    if (amount !== null) {\n      this.applicationContext.storageController.set(\n        this.tokenStoreKey(tokenType) + \"_amount\",\n        amount.toString()\n      );\n    }\n    if (snapshot.token !== null) {\n      const { symbol, address, chainId, name, decimals } = snapshot.token;\n      this.applicationContext.storageController.set(\n        this.tokenStoreKey(tokenType),\n        { symbol, address, chainId, name, decimals }\n      );\n    }\n  }\n  restoreToken(tokenType) {\n    const tokenContext = this.getTokenContext(tokenType);\n    const amount = this.applicationContext.storageController.get(this.tokenStoreKey(tokenType) + \"_amount\", String);\n    const token = this.applicationContext.storageController.get(this.tokenStoreKey(tokenType), JsonParser);\n    if (token !== null) {\n      tokenContext.setToken(token);\n    }\n    if (amount !== null) {\n      tokenContext.setAmount(BigInt(amount));\n    }\n  }\n  tokenStoreKey(tokenType) {\n    return `token_${tokenType}`;\n  }\n  startChainTokenSync() {\n    this.subscription.add(this.applicationContext.connectWalletController.data.chainId$.pipe(\n      switchMap(async (chainId) => {\n        if (!chainId || !isChainId(chainId)) return;\n        const sourceTokenSnap = this.source.getSnapshot();\n        const destinationTokenSnap = this.destination.getSnapshot();\n        if (sourceTokenSnap.token && sourceTokenSnap.token.chainId !== chainId) {\n          const token = await this.applicationContext.tokenController.getNativeToken(chainId);\n          this.setTokenInner(token, \"source\");\n        }\n        if (destinationTokenSnap.token && destinationTokenSnap.token.chainId !== chainId) {\n          this.setTokenInner(null, \"destination\");\n        }\n      })\n    ).subscribe());\n  }\n};\n\n// libs/sdk/src/lib/swap/swap-context-onchain.strategy.ts\nimport { BigMath } from \"@one-inch-community/core/math\";\nvar SwapContextOnChainStrategy = class {\n  constructor(pairHolder, walletController, rateProvider) {\n    this.pairHolder = pairHolder;\n    this.walletController = walletController;\n    this.rateProvider = rateProvider;\n  }\n  swap(swapSnapshot) {\n    throw new Error(\"OnChain strategy not support swap\");\n  }\n  async getDataSnapshot() {\n    const sourceTokenSnapshot = this.pairHolder.getSnapshot(\"source\");\n    const destinationTokenSnapshot = this.pairHolder.getSnapshot(\"destination\");\n    const { token: sourceToken, amount: sourceTokenAmount } = sourceTokenSnapshot;\n    const { token: destinationToken } = destinationTokenSnapshot;\n    const chainId = await this.walletController.data.getChainId();\n    const activeAddress = await this.walletController.data.getActiveAddress();\n    if (chainId === null || sourceToken === null || destinationToken === null || sourceTokenAmount === null || activeAddress === null) {\n      throw new Error(\"\");\n    }\n    const rate = await this.rateProvider.getOnChainRate(\n      chainId,\n      sourceToken,\n      destinationToken\n    );\n    if (rate === null) {\n      throw new Error(\"\");\n    }\n    let destinationTokenAmount;\n    if (rate.revertedRate) {\n      destinationTokenAmount = BigMath.div(\n        sourceTokenAmount,\n        rate.revertedRate,\n        sourceToken.decimals,\n        destinationToken.decimals,\n        destinationToken.decimals\n      );\n    } else {\n      destinationTokenAmount = BigMath.mul(\n        sourceTokenAmount,\n        rate.rate,\n        sourceToken.decimals,\n        sourceToken.decimals,\n        destinationToken.decimals\n      );\n    }\n    return {\n      chainId,\n      sourceToken,\n      destinationToken,\n      sourceTokenAmount,\n      destinationTokenAmount,\n      rate,\n      minReceive: destinationTokenAmount,\n      autoAuctionTime: null,\n      autoSlippage: null,\n      rawResponseData: null\n    };\n  }\n};\n\n// libs/sdk/src/lib/swap/swap-context-fusion.strategy.ts\nimport {\n  getOneInchRouterV6ContractAddress,\n  getPermit,\n  getWrapperNativeToken,\n  isNativeToken,\n  preparePermit2ForSwap\n} from \"@one-inch-community/sdk/chain\";\nimport { BigMath as BigMath2 } from \"@one-inch-community/core/math\";\nimport { buildFusionSdk } from \"@one-inch-community/sdk/api\";\nvar RATE_BUMP_DENOMINATOR = 10000000n;\nvar SwapContextFusionStrategy = class {\n  constructor(swapContext, pairHolder, walletController, settings, devPortalAdapter) {\n    this.swapContext = swapContext;\n    this.pairHolder = pairHolder;\n    this.walletController = walletController;\n    this.settings = settings;\n    this.devPortalAdapter = devPortalAdapter;\n  }\n  async swap(swapSnapshot) {\n    const {\n      chainId,\n      sourceToken,\n      destinationToken,\n      sourceTokenAmount,\n      destinationTokenAmount,\n      slippage,\n      auctionTime,\n      rawResponseData\n    } = swapSnapshot;\n    const walletAddress = await this.walletController.data.getActiveAddress();\n    if (walletAddress === null) {\n      throw new Error(\"Wallet not connected\");\n    }\n    if (!rawResponseData) {\n      throw new Error(\"\");\n    }\n    const fusionSDK = await buildFusionSdk(chainId, this.walletController);\n    const permitData = await getPermit(chainId, sourceToken.address, walletAddress, getOneInchRouterV6ContractAddress(chainId));\n    const orderParams = {\n      walletAddress,\n      fromTokenAddress: sourceToken.address,\n      toTokenAddress: destinationToken.address,\n      amount: sourceTokenAmount.toString(),\n      preset: rawResponseData.recommended_preset\n    };\n    if (permitData) {\n      orderParams.permit = await preparePermit2ForSwap(chainId, walletAddress, permitData.signature, permitData.permitSingle);\n      orderParams.isPermit2 = true;\n    }\n    const { type: slippageType, value: slippageValue } = slippage;\n    const { type: auctionTimeType, value: auctionTimeValue } = auctionTime;\n    if (slippageType !== \"auto\" || auctionTimeType !== \"auto\") {\n      const preset = rawResponseData.presets[rawResponseData.recommended_preset];\n      const auctionEndAmount = slippageType !== \"auto\" ? destinationTokenAmount - BigMath2.calculatePercentage(destinationTokenAmount, slippageValue ?? rawResponseData.autoK) : BigInt(preset.auctionEndAmount);\n      const auctionDuration = auctionTimeType !== \"auto\" ? auctionTimeValue ?? preset.auctionDuration : preset.auctionDuration;\n      const auctionStartAmount = preset.auctionStartAmount;\n      const getToTokenAmount = (coefficient) => {\n        let rate = coefficient - preset.gasCost.gasBumpEstimate;\n        if (rate < 0) rate = 0;\n        return auctionEndAmount * (BigInt(rate) + RATE_BUMP_DENOMINATOR) / RATE_BUMP_DENOMINATOR;\n      };\n      const getDelay = (delay) => {\n        if (auctionTimeType === \"auto\") return delay;\n        return delay * auctionTimeValue / preset.auctionDuration;\n      };\n      orderParams.customPreset = {\n        auctionDuration,\n        auctionStartAmount: BigInt(auctionStartAmount).toString(),\n        auctionEndAmount: auctionEndAmount.toString()\n        // points: [\n        //   ...preset.points.map((point, index) => ({\n        //       delay: getDelay(point.delay),\n        //       toTokenAmount: getToTokenAmount(point.coefficient).toString()\n        //   }))\n        // ]\n      };\n      orderParams.preset = \"custom\";\n    }\n    const createOrderResponse = await fusionSDK.createOrder(orderParams);\n    const info = await fusionSDK.submitOrder(createOrderResponse.order, createOrderResponse.quoteId);\n    return info.orderHash;\n  }\n  async getDataSnapshot() {\n    const sourceTokenSnapshot = this.pairHolder.getSnapshot(\"source\");\n    const destinationTokenSnapshot = this.pairHolder.getSnapshot(\"destination\");\n    let { token: sourceToken } = sourceTokenSnapshot;\n    const { amount: sourceTokenAmount } = sourceTokenSnapshot;\n    const { token: destinationToken } = destinationTokenSnapshot;\n    const chainId = await this.walletController.data.getChainId();\n    const activeAddress = await this.walletController.data.getActiveAddress();\n    if (chainId === null || sourceToken === null || destinationToken === null || sourceTokenAmount === null || activeAddress === null || sourceTokenAmount === 0n) {\n      throw new Error(\"\");\n    }\n    const balance = await this.swapContext.getMaxAmount();\n    if (balance < sourceTokenAmount) {\n      throw new Error(\"\");\n    }\n    if (isNativeToken(sourceToken.address)) {\n      sourceToken = getWrapperNativeToken(chainId);\n    }\n    const fusionQuoteReceive = await this.devPortalAdapter.getFusionQuoteReceive(\n      chainId,\n      sourceToken.address,\n      destinationToken.address,\n      sourceTokenAmount,\n      activeAddress\n    );\n    if (fusionQuoteReceive === null) {\n      throw new Error(\"\");\n    }\n    const { toTokenAmount, recommended_preset, presets, autoK } = fusionQuoteReceive;\n    const recommendedPreset = presets[recommended_preset];\n    const marketPrice = BigInt(toTokenAmount);\n    const rate = BigMath2.div(\n      marketPrice,\n      sourceTokenAmount,\n      destinationToken.decimals,\n      sourceToken.decimals\n    );\n    const revertedRate = BigMath2.div(\n      sourceTokenAmount,\n      marketPrice,\n      sourceToken.decimals,\n      destinationToken.decimals\n    );\n    const rateData = {\n      chainId,\n      rate,\n      revertedRate,\n      isReverted: false,\n      sourceToken,\n      destinationToken\n    };\n    const slippageSettings = this.settings.slippage;\n    let minReceive = BigInt(recommendedPreset.auctionEndAmount);\n    if (slippageSettings.value !== null) {\n      const [slippage] = slippageSettings.value;\n      const percentAmount = BigMath2.calculatePercentage(marketPrice, slippage);\n      minReceive = marketPrice - percentAmount;\n    }\n    return {\n      chainId,\n      sourceToken,\n      destinationToken,\n      sourceTokenAmount,\n      minReceive,\n      destinationTokenAmount: marketPrice,\n      autoAuctionTime: recommendedPreset.auctionDuration,\n      autoSlippage: autoK,\n      rate: rateData,\n      rawResponseData: fusionQuoteReceive\n    };\n  }\n};\n\n// libs/sdk/src/lib/swap/swap-context.ts\nimport {\n  estimateWrap,\n  getApproveSimulation,\n  getBlockEmitter,\n  getOneInchRouterV6ContractAddress as getOneInchRouterV6ContractAddress2,\n  getPermit as getPermit2,\n  getPermit2TypeData,\n  isNativeToken as isNativeToken2,\n  savePermit\n} from \"@one-inch-community/sdk/chain\";\nimport { SettingsController } from \"@one-inch-community/core/settings\";\nimport { maxUint256 } from \"viem\";\nvar SwapContext = class {\n  constructor(applicationContext) {\n    this.applicationContext = applicationContext;\n    this.subscription = new Subscription2();\n    this.settings = {\n      slippage: new SettingsController(\"slippage\"),\n      auctionTime: new SettingsController(\"auctionTime\")\n    };\n    this.loading$ = new BehaviorSubject(false);\n    this.chainId$ = defer(() => this.walletController.data.chainId$).pipe(\n      distinctUntilChanged2()\n    );\n    this.connectedWalletAddress$ = defer(() => this.walletController.data.activeAddress$).pipe(\n      distinctUntilChanged2()\n    );\n    this.block$ = this.chainId$.pipe(\n      switchMap2((chainId) => chainId ? getBlockEmitter(chainId) : of(null))\n    );\n    this.updateData$ = new Subject3();\n    this.updateDataComplete$ = new Subject3();\n    this.dataUpdateEmitter$ = merge(\n      this.block$,\n      this.chainId$,\n      this.connectedWalletAddress$,\n      defer(() => this.pairHolder.streamSnapshot(\"source\")),\n      defer(() => this.pairHolder.streamSnapshot(\"destination\")),\n      this.updateData$\n    ).pipe(\n      debounceTime(500),\n      map2(() => void 0),\n      startWith3(void 0),\n      shareReplay2({ bufferSize: 1, refCount: true })\n    );\n    this.dataSnapshot$ = this.dataUpdateEmitter$.pipe(\n      withLatestFrom(this.connectedWalletAddress$),\n      switchMap2(([_, address]) => {\n        this.loading$.next(true);\n        return this.getDataSnapshot(address === null);\n      }),\n      tap2(() => {\n        this.loading$.next(false);\n        this.updateDataComplete$.next();\n      }),\n      shareReplay2({ bufferSize: 1, refCount: true })\n    );\n    this.rate$ = this.dataSnapshot$.pipe(\n      map2((snapshot) => snapshot?.rate ?? null)\n    );\n    this.minReceive$ = this.dataSnapshot$.pipe(\n      map2((snapshot) => snapshot?.minReceive ?? 0n)\n    );\n    this.destinationTokenAmount$ = this.dataSnapshot$.pipe(\n      map2((snapshot) => snapshot?.destinationTokenAmount ?? 0n)\n    );\n    this.autoSlippage$ = this.dataSnapshot$.pipe(\n      map2((snapshot) => snapshot?.autoSlippage ?? null)\n    );\n    this.autoAuctionTime$ = this.dataSnapshot$.pipe(\n      map2((snapshot) => snapshot?.autoAuctionTime ?? null)\n    );\n    this.slippage$ = combineLatest([\n      this.autoSlippage$,\n      this.settings.slippage.value$\n    ]).pipe(\n      map2(([autoSlippage, slippageSettings]) => {\n        if (slippageSettings) return { type: slippageSettings[1], value: slippageSettings[0] };\n        return { type: \"auto\", value: autoSlippage };\n      }),\n      shareReplay2({ bufferSize: 1, refCount: true })\n    );\n    this.auctionTime$ = combineLatest([\n      this.autoAuctionTime$,\n      this.settings.auctionTime.value$\n    ]).pipe(\n      map2(([autoAuctionTime, auctionTimeSettings]) => {\n        if (auctionTimeSettings) return { type: auctionTimeSettings[1], value: auctionTimeSettings[0] };\n        return { type: \"auto\", value: autoAuctionTime };\n      }),\n      shareReplay2({ bufferSize: 1, refCount: true })\n    );\n    this.pairHolder = new PairHolder(this.applicationContext);\n    this.oneInchApiAdapter = this.applicationContext.oneInchDevPortalAdapter;\n    this.walletController = this.applicationContext.connectWalletController;\n    this.contextStrategy = {\n      onChain: new SwapContextOnChainStrategy(this.pairHolder, this.walletController, this.applicationContext.tokenRateProvider),\n      fusion: new SwapContextFusionStrategy(this, this.pairHolder, this.walletController, this.settings, this.oneInchApiAdapter)\n    };\n  }\n  init() {\n    this.pairHolder.init();\n    this.subscription.add(\n      merge(\n        this.destinationTokenAmount$.pipe(\n          distinctUntilChanged2(),\n          tap2((amount) => {\n            this.setTokenAmountByType(\"destination\", amount);\n          }),\n          subscribeOn(asyncScheduler)\n        )\n      ).subscribe()\n    );\n  }\n  wrapNativeToken(amount) {\n    throw new Error(\"Method not implemented.\");\n  }\n  async getApprove() {\n    const chainId = await this.applicationContext.connectWalletController.data.getChainId();\n    const sourceTokenSnapshot = this.pairHolder.getSnapshot(\"source\");\n    const owner = await this.applicationContext.connectWalletController.data.getActiveAddress();\n    if (!chainId || !sourceTokenSnapshot || !sourceTokenSnapshot.token || !owner) throw new Error(\"\");\n    const spender = getOneInchRouterV6ContractAddress2(chainId);\n    const result = await getApproveSimulation(chainId, sourceTokenSnapshot.token.address, owner, spender, maxUint256);\n    return await this.applicationContext.connectWalletController.writeContract(result.request);\n  }\n  getSettingsController(name) {\n    const controller = this.settings[name];\n    if (!controller) throw new Error(\"\");\n    return controller;\n  }\n  async getPermit() {\n    const chainId = await this.walletController.data.getChainId();\n    const walletAddress = await this.walletController.data.getActiveAddress();\n    const tokenSnapshot = this.pairHolder.getSnapshot(\"source\");\n    if (!chainId || !walletAddress || !isTokenSnapshotNotNullable(tokenSnapshot)) {\n      throw new Error(\"\");\n    }\n    const signFromStorage = await getPermit2(\n      chainId,\n      tokenSnapshot.token.address,\n      walletAddress,\n      getOneInchRouterV6ContractAddress2(chainId)\n    );\n    if (signFromStorage !== null) return;\n    const typeData = await getPermit2TypeData(\n      chainId,\n      tokenSnapshot.token.address,\n      walletAddress,\n      getOneInchRouterV6ContractAddress2(chainId)\n    );\n    const sign = await this.walletController.signTypedData(typeData);\n    await savePermit(\n      chainId,\n      tokenSnapshot.token.address,\n      walletAddress,\n      getOneInchRouterV6ContractAddress2(chainId),\n      sign,\n      typeData.message\n    );\n  }\n  destroy() {\n    this.pairHolder.destroy();\n    this.subscription.unsubscribe();\n  }\n  setPair(pair) {\n    this.pairHolder.setPair(pair);\n  }\n  setToken(tokenType, token) {\n    this.pairHolder.setToken(token, tokenType);\n  }\n  switchPair() {\n    this.pairHolder.switchPair();\n  }\n  async getSnapshot() {\n    this.updateData$.next();\n    await firstValueFrom(this.updateDataComplete$);\n    const [swapSnapshot, slippage, auctionTime] = await Promise.all([\n      firstValueFrom(this.dataSnapshot$),\n      firstValueFrom(this.slippage$),\n      firstValueFrom(this.auctionTime$)\n    ]);\n    return {\n      ...swapSnapshot,\n      slippage,\n      auctionTime\n    };\n  }\n  async swap(swapSnapshot) {\n    const strategy = await this.getActiveStrategy();\n    return await strategy.swap(swapSnapshot);\n  }\n  async getMaxAmount() {\n    const snapshot = this.pairHolder.getSnapshot(\"source\");\n    const sourceToken = snapshot.token;\n    const connectedWalletAddress = await this.walletController.data.getActiveAddress();\n    if (!sourceToken || !connectedWalletAddress) return 0n;\n    const balance = await this.applicationContext.tokenController.getTokenBalance(sourceToken.chainId, sourceToken.address, connectedWalletAddress);\n    let amount = BigInt(balance?.amount ?? 0);\n    if (isNativeToken2(sourceToken.address)) {\n      const chainId = await this.walletController.data.getChainId();\n      if (!chainId) return 0n;\n      const [gasUnits, gasPriceDTO] = await Promise.all([\n        estimateWrap(chainId, amount),\n        this.oneInchApiAdapter.getGasPrice(chainId)\n      ]);\n      if (!gasPriceDTO) return 0n;\n      const gasPrice = gasPriceDTO.high;\n      const fee = gasUnits * (BigInt(gasPrice.maxFeePerGas) + BigInt(gasPrice.maxPriorityFeePerGas));\n      amount = amount - fee;\n      if (amount < 0n) {\n        amount = 0n;\n      }\n    }\n    return amount;\n  }\n  async setMaxAmount() {\n    const amount = await this.getMaxAmount();\n    this.setTokenAmountByType(\"source\", amount);\n  }\n  getTokenByType(type) {\n    return this.pairHolder.streamSnapshot(type).pipe(\n      map2((snapshot) => snapshot.token),\n      distinctUntilChanged2()\n    );\n  }\n  getTokenAmountByType(type) {\n    return this.pairHolder.streamSnapshot(type).pipe(\n      map2((snapshot) => {\n        return snapshot.amount;\n      }),\n      distinctUntilChanged2()\n    );\n  }\n  getTokenRawAmountByType(type) {\n    return this.pairHolder.streamSnapshot(type).pipe(\n      map2((snapshot) => snapshot.amount),\n      distinctUntilChanged2()\n    );\n  }\n  setTokenAmountByType(type, value) {\n    this.pairHolder.setAmount(type, value);\n  }\n  async getActiveStrategy() {\n    const address = await this.walletController.data.getActiveAddress();\n    if (address === null) {\n      return this.contextStrategy.onChain;\n    }\n    return this.contextStrategy.fusion;\n  }\n  async getDataSnapshot(useOnChainStrategy) {\n    if (!useOnChainStrategy) {\n      try {\n        return await this.contextStrategy.fusion.getDataSnapshot();\n      } catch (error) {\n        return this.getDataSnapshot(true);\n      }\n    }\n    try {\n      return await this.contextStrategy.onChain.getDataSnapshot();\n    } catch (error) {\n      return null;\n    }\n  }\n};\nfunction isTokenSnapshotNotNullable(snapshot) {\n  return snapshot.token !== null && snapshot.amount !== null;\n}\n\n// node_modules/.pnpm/@lit+context@1.1.2/node_modules/@lit/context/lib/create-context.js\nfunction n(n2) {\n  return n2;\n}\n\n// libs/sdk/src/lib/swap/swap-context-token.ts\nvar SwapContextToken = n(Symbol(\"SwapContextToken\"));\n\n// libs/sdk/src/lib/swap/is-support-fusion.ts\nimport { ChainId as ChainId2 } from \"@one-inch-community/models\";\nvar isSupportFusionList = [\n  ChainId2.eth,\n  ChainId2.bnb,\n  ChainId2.matic,\n  ChainId2.arbitrum,\n  ChainId2.avalanche,\n  ChainId2.op,\n  ChainId2.gnosis,\n  ChainId2.fantom\n];\nfunction isSupportFusion(chainId) {\n  return isSupportFusionList.includes(chainId);\n}\nexport {\n  SwapContext,\n  SwapContextToken,\n  isSupportFusion\n};\n//# sourceMappingURL=index.esm.js.map\n"],"names":["withLatestFrom","inputs","_i","project","popResultSelector","operate","source","subscriber","len","otherValues","hasValue","ready","_loop_1","i","innerFrom","createOperatorSubscriber","value","identity","noop","values","__spreadArray","__read","TokenContext","Subject","token","tokenFromSnap","isTokensEqual","amount","amountFromSnap","map","startWith","distinctUntilChanged","shareReplay","isChainId","chainId","ChainId","isTokensEqual2","token1","token2","isAddressMatching","isAddressEqual","isChainIdMatching","PairHolder","applicationContext","Subscription","Subject2","destination","pair","tokenType","destinationTokenSnap","sourceTokenSnap","startWith2","switchMap","snapshot","symbol","address","name","decimals","tokenContext","JsonParser","SwapContextOnChainStrategy","pairHolder","walletController","rateProvider","swapSnapshot","sourceTokenSnapshot","destinationTokenSnapshot","sourceToken","sourceTokenAmount","destinationToken","activeAddress","rate","destinationTokenAmount","BigMath","SwapContextFusionStrategy","swapContext","settings","devPortalAdapter","slippage","auctionTime","rawResponseData","walletAddress","fusionSDK","buildFusionSdk","permitData","getPermit","getOneInchRouterV6ContractAddress","orderParams","preparePermit2ForSwap","slippageType","slippageValue","auctionTimeType","auctionTimeValue","preset","auctionEndAmount","BigMath2","auctionDuration","auctionStartAmount","createOrderResponse","isNativeToken","getWrapperNativeToken","fusionQuoteReceive","toTokenAmount","recommended_preset","presets","autoK","recommendedPreset","marketPrice","revertedRate","rateData","slippageSettings","minReceive","percentAmount","SwapContext","Subscription2","SettingsController","BehaviorSubject","defer","distinctUntilChanged2","switchMap2","getBlockEmitter","of","Subject3","merge","debounceTime","map2","startWith3","shareReplay2","_","tap2","combineLatest","autoSlippage","autoAuctionTime","auctionTimeSettings","subscribeOn","asyncScheduler","owner","spender","getOneInchRouterV6ContractAddress2","result","getApproveSimulation","maxUint256","controller","tokenSnapshot","isTokenSnapshotNotNullable","getPermit2","typeData","getPermit2TypeData","sign","savePermit","firstValueFrom","connectedWalletAddress","balance","isNativeToken2","gasUnits","gasPriceDTO","estimateWrap","gasPrice","fee","type","useOnChainStrategy","SwapContextToken","isSupportFusionList","ChainId2","isSupportFusion"],"mappings":"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","x_google_ignoreList":[0]}