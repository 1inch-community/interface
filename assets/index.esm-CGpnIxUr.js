import{B as k,i as U}from"./index.esm-CkYCePED.js";import{JsonParser as G}from"./index.esm-COc-PyqV.js";import{q as L,o as Q,i as J,c as B,r as X,n as Y,j as R,k as F,C as d,g as q,S as $,m as h,s as E,a as C,e as Z}from"./index.esm-DhwY4kHm.js";import{d as w,s as b,j as tt,o as et,m as _,b as nt,l as T,ac as at,ad as z,ae as ot,af as st,c as N,ag as it,ah as rt,h as lt,ai as ct,aj as ut,a9 as ht}from"./index.esm-BZsFi2iI.js";import{b as pt}from"./index.esm-Cij0ul1e.js";import{S as W}from"./index.esm-OIwjBXxl.js";import{B as dt,c as O}from"./combineLatest-Bzt_9bb6.js";import{d as y}from"./defer-BRewiDsk.js";import{t as M}from"./tap-DGvjHJum.js";import{f as x}from"./firstValueFrom-RTAQ66ca.js";function mt(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=L(t);return Q(function(a,o){for(var s=t.length,r=new Array(s),l=t.map(function(){return!1}),i=!1,p=function(c){J(t[c]).subscribe(B(o,function(u){r[c]=u,!i&&!l[c]&&(l[c]=!0,(i=l.every(X))&&(l=null))},Y))},m=0;m<s;m++)p(m);a.subscribe(B(o,function(c){if(i){var u=R([c],F(r));o.next(n?n.apply(void 0,R([],F(u))):u)}}))})}var j=class{constructor(){this.lastSnapshot={token:null,amount:null},this.signalChange$=new $}setToken(t){const{token:e}=this.lastSnapshot;e&&t&&U(e,t)||(this.lastSnapshot={...this.lastSnapshot,token:t,amount:0n},this.signalChange$.next())}setAmount(t){const{amount:e}=this.lastSnapshot;e!==t&&(this.lastSnapshot={...this.lastSnapshot,amount:t},this.signalChange$.next())}getSnapshot(){return this.lastSnapshot}streamSnapshot(){return this.signalChange$.pipe(h(()=>this.lastSnapshot),E(this.lastSnapshot),w(),C({bufferSize:1,refCount:!0}))}};function gt(t){return d[t]!==void 0}function K(t,e){const n=ht(t.address,e.address),a=t.chainId===e.chainId;return n&&a}var St=class{constructor(t){this.applicationContext=t,this.subscription=new q,this.source=new j,this.destination=new j,this.pairChance$=new $}init(){this.restorePair(),this.startChainTokenSync()}restorePair(){this.restoreToken("source"),this.restoreToken("destination")}switchPair(){const{source:t,destination:e}=this;this.source=e,this.destination=t,this.updateTokenStore("source"),this.updateTokenStore("destination"),this.pairChance$.next()}setPair(t){this.setTokenInner(t.source,"source"),this.setTokenInner(t.destination,"destination"),this.pairChance$.next()}setToken(t,e){if(e==="source"&&t!==null){const n=this.destination.getSnapshot();if(n.token!==null&&K(t,n.token))return this.switchPair()}if(e==="destination"&&t!==null){const n=this.source.getSnapshot();if(n.token!==null&&K(t,n.token))return this.switchPair()}this.setTokenInner(t,e)}setAmount(t,e){this.getTokenContext(t).setAmount(e),this.updateTokenStore(t)}streamSnapshot(t){return this.pairChance$.pipe(E(null),b(()=>this.getTokenContext(t).streamSnapshot()))}getSnapshot(t){return this.getTokenContext(t).getSnapshot()}destroy(){this.subscription.unsubscribe()}setTokenInner(t,e){this.getTokenContext(e).setToken(t),this.updateTokenStore(e)}getTokenContext(t){if(t==="source")return this.source;if(t==="destination")return this.destination;throw new Error(`invalid token type ${t}`)}updateTokenStore(t){const n=this.getTokenContext(t).getSnapshot(),a=n.amount;if(a!==null&&this.applicationContext.storageController.set(this.tokenStoreKey(t)+"_amount",a.toString()),n.token!==null){const{symbol:o,address:s,chainId:r,name:l,decimals:i}=n.token;this.applicationContext.storageController.set(this.tokenStoreKey(t),{symbol:o,address:s,chainId:r,name:l,decimals:i})}}restoreToken(t){const e=this.getTokenContext(t),n=this.applicationContext.storageController.get(this.tokenStoreKey(t)+"_amount",String),a=this.applicationContext.storageController.get(this.tokenStoreKey(t),G);a!==null&&e.setToken(a),n!==null&&e.setAmount(BigInt(n))}tokenStoreKey(t){return`token_${t}`}startChainTokenSync(){this.subscription.add(this.applicationContext.connectWalletController.data.chainId$.pipe(b(async t=>{if(!t||!gt(t))return;const e=this.source.getSnapshot(),n=this.destination.getSnapshot();if(e.token&&e.token.chainId!==t){const a=await this.applicationContext.tokenController.getNativeToken(t);this.setTokenInner(a,"source")}n.token&&n.token.chainId!==t&&this.setTokenInner(null,"destination")})).subscribe())}},wt=class{constructor(t,e,n){this.pairHolder=t,this.walletController=e,this.rateProvider=n}swap(t){throw new Error("OnChain strategy not support swap")}async getDataSnapshot(){const t=this.pairHolder.getSnapshot("source"),e=this.pairHolder.getSnapshot("destination"),{token:n,amount:a}=t,{token:o}=e,s=await this.walletController.data.getChainId();if(s===null||n===null||o===null||a===null)throw new Error("");const r=await this.rateProvider.getOnChainRate(s,n,o);if(r===null)throw new Error("");let l;return r.isReverted?l=k.div(a,r.revertedRate,n.decimals,n.decimals,o.decimals):l=k.mul(a,r.rate,n.decimals,o.decimals,o.decimals),{chainId:s,sourceToken:n,destinationToken:o,sourceTokenAmount:a,destinationTokenAmount:l,rate:r,minReceive:l,autoAuctionTime:null,autoSlippage:null,rawResponseData:null}}},kt=class{constructor(t,e,n,a,o){this.swapContext=t,this.pairHolder=e,this.walletController=n,this.settings=a,this.devPortalAdapter=o}async swap(t){const{chainId:e,sourceToken:n,destinationToken:a,sourceTokenAmount:o,destinationTokenAmount:s,slippage:r,auctionTime:l,rawResponseData:i}=t,p=await this.walletController.data.getActiveAddress();if(p===null)throw new Error("Wallet not connected");if(!i)throw new Error("");const m=await pt(e,this.walletController),c=await z(e,n.address,p,T(e)),u={walletAddress:p,fromTokenAddress:n.address,toTokenAddress:a.address,amount:o.toString(),preset:i.recommended_preset};c&&(u.permit=await rt(e,p,c.signature,c.permitSingle),u.isPermit2=!0);const{type:f,value:g}=r,{type:A,value:I}=l;if(f!=="auto"||A!=="auto"){const S=i.presets[i.recommended_preset],D=f!=="auto"?s-k.calculatePercentage(s,g??i.autoK):BigInt(S.auctionEndAmount),H=A!=="auto"?I??S.auctionDuration:S.auctionDuration,V=S.auctionStartAmount;u.customPreset={auctionDuration:H,auctionStartAmount:BigInt(V).toString(),auctionEndAmount:D.toString()},u.preset="custom"}const v=await m.createOrder(u);return(await m.submitOrder(v.order,v.quoteId)).orderHash}async getDataSnapshot(){const t=this.pairHolder.getSnapshot("source"),e=this.pairHolder.getSnapshot("destination");let{token:n}=t;const{amount:a}=t,{token:o}=e,s=await this.walletController.data.getChainId(),r=await this.walletController.data.getActiveAddress();if(s===null||n===null||o===null||a===null||r===null||a===0n)throw new Error("");if(await this.swapContext.getMaxAmount()<a)throw new Error("");N(n.address)&&(n=lt(s));const i=await this.devPortalAdapter.getFusionQuoteReceive(s,n.address,o.address,a,r);if(i===null)throw new Error("");const{toTokenAmount:p,recommended_preset:m,presets:c,autoK:u}=i,f=c[m],g=BigInt(p),A=k.div(g,a,o.decimals,n.decimals),I=k.div(a,g,n.decimals,o.decimals),v={chainId:s,rate:A,revertedRate:I,isReverted:!1,sourceToken:n,destinationToken:o},P=this.settings.slippage;let S=BigInt(f.auctionEndAmount);if(P.value!==null){const[D]=P.value,H=k.calculatePercentage(g,D);S=g-H}return{chainId:s,sourceToken:n,destinationToken:o,sourceTokenAmount:a,minReceive:S,destinationTokenAmount:g,autoAuctionTime:f.auctionDuration,autoSlippage:u,rate:v,rawResponseData:i}}},ft=class{constructor(t){this.applicationContext=t,this.subscription=new q,this.settings={slippage:new W("slippage"),auctionTime:new W("auctionTime")},this.loading$=new dt(!1),this.chainId$=y(()=>this.walletController.data.chainId$).pipe(w()),this.connectedWalletAddress$=y(()=>this.walletController.data.activeAddress$).pipe(w()),this.block$=this.chainId$.pipe(b(e=>e?tt(e):et(null))),this.updateData$=new $,this.updateDataComplete$=new $,this.dataUpdateEmitter$=_(this.block$,this.chainId$,this.connectedWalletAddress$,y(()=>this.pairHolder.streamSnapshot("source")),y(()=>this.pairHolder.streamSnapshot("destination")),this.updateData$).pipe(nt(500),h(()=>{}),E(void 0),C({bufferSize:1,refCount:!0})),this.dataSnapshot$=this.dataUpdateEmitter$.pipe(mt(this.connectedWalletAddress$),b(([e,n])=>(this.loading$.next(!0),this.getDataSnapshot(n===null))),M(()=>{this.loading$.next(!1),this.updateDataComplete$.next()}),C({bufferSize:1,refCount:!0})),this.rate$=this.dataSnapshot$.pipe(h(e=>(e==null?void 0:e.rate)??null)),this.minReceive$=this.dataSnapshot$.pipe(h(e=>(e==null?void 0:e.minReceive)??0n)),this.destinationTokenAmount$=this.dataSnapshot$.pipe(h(e=>(e==null?void 0:e.destinationTokenAmount)??0n)),this.autoSlippage$=this.dataSnapshot$.pipe(h(e=>(e==null?void 0:e.autoSlippage)??null)),this.autoAuctionTime$=this.dataSnapshot$.pipe(h(e=>(e==null?void 0:e.autoAuctionTime)??null)),this.slippage$=O([this.autoSlippage$,this.settings.slippage.value$]).pipe(h(([e,n])=>n?{type:n[1],value:n[0]}:{type:"auto",value:e}),C({bufferSize:1,refCount:!0})),this.auctionTime$=O([this.autoAuctionTime$,this.settings.auctionTime.value$]).pipe(h(([e,n])=>n?{type:n[1],value:n[0]}:{type:"auto",value:e}),C({bufferSize:1,refCount:!0})),this.pairHolder=new St(this.applicationContext),this.oneInchApiAdapter=this.applicationContext.oneInchDevPortalAdapter,this.walletController=this.applicationContext.connectWalletController,this.contextStrategy={onChain:new wt(this.pairHolder,this.walletController,this.applicationContext.tokenRateProvider),fusion:new kt(this,this.pairHolder,this.walletController,this.settings,this.oneInchApiAdapter)}}init(){this.pairHolder.init(),this.subscription.add(_(this.destinationTokenAmount$.pipe(w(),M(t=>{this.setTokenAmountByType("destination",t)}),Z(ct))).subscribe())}wrapNativeToken(t){throw new Error("Method not implemented.")}async getApprove(){const t=await this.applicationContext.connectWalletController.data.getChainId(),e=this.pairHolder.getSnapshot("source"),n=await this.applicationContext.connectWalletController.data.getActiveAddress();if(!t||!e||!e.token||!n)throw new Error("");const a=T(t),o=await at(t,e.token.address,n,a,ut);return await this.applicationContext.connectWalletController.writeContract(o.request)}getSettingsController(t){const e=this.settings[t];if(!e)throw new Error("");return e}async getPermit(){const t=await this.walletController.data.getChainId(),e=await this.walletController.data.getActiveAddress(),n=this.pairHolder.getSnapshot("source");if(!t||!e||!Ct(n))throw new Error("");if(await z(t,n.token.address,e,T(t))!==null)return;const o=await ot(t,n.token.address,e,T(t)),s=await this.walletController.signTypedData(o);await st(t,n.token.address,e,T(t),s,o.message)}destroy(){this.pairHolder.destroy(),this.subscription.unsubscribe()}setPair(t){this.pairHolder.setPair(t)}setToken(t,e){this.pairHolder.setToken(e,t)}switchPair(){this.pairHolder.switchPair()}async getSnapshot(){this.updateData$.next(),await x(this.updateDataComplete$);const[t,e,n]=await Promise.all([x(this.dataSnapshot$),x(this.slippage$),x(this.auctionTime$)]);return{...t,slippage:e,auctionTime:n}}async swap(t){return await(await this.getActiveStrategy()).swap(t)}async getMaxAmount(){const e=this.pairHolder.getSnapshot("source").token,n=await this.walletController.data.getActiveAddress();if(!e||!n)return 0n;const a=await this.applicationContext.tokenController.getTokenBalance(e.chainId,e.address,n);let o=BigInt((a==null?void 0:a.amount)??0);if(N(e.address)){const s=await this.walletController.data.getChainId();if(!s)return 0n;const[r,l]=await Promise.all([it(s,o),this.oneInchApiAdapter.getGasPrice(s)]);if(!l)return 0n;const i=l.high,p=r*(BigInt(i.maxFeePerGas)+BigInt(i.maxPriorityFeePerGas));o=o-p,o<0n&&(o=0n)}return o}async setMaxAmount(){const t=await this.getMaxAmount();this.setTokenAmountByType("source",t)}getTokenByType(t){return this.pairHolder.streamSnapshot(t).pipe(h(e=>e.token),w())}getTokenAmountByType(t){return this.pairHolder.streamSnapshot(t).pipe(h(e=>e.amount),w())}getTokenRawAmountByType(t){return this.pairHolder.streamSnapshot(t).pipe(h(e=>e.amount),w())}setTokenAmountByType(t,e){this.pairHolder.setAmount(t,e)}async getActiveStrategy(){return await this.walletController.data.getActiveAddress()===null?this.contextStrategy.onChain:this.contextStrategy.fusion}async getDataSnapshot(t){if(!t)try{return await this.contextStrategy.fusion.getDataSnapshot()}catch{return this.getDataSnapshot(!0)}try{return await this.contextStrategy.onChain.getDataSnapshot()}catch{return null}}};function Ct(t){return t.token!==null&&t.amount!==null}var Tt=Symbol("SwapContextToken"),At=[d.eth,d.bnb,d.matic,d.arbitrum,d.avalanche,d.op,d.gnosis,d.fantom];function vt(t){return At.includes(t)}const Rt=Object.freeze(Object.defineProperty({__proto__:null,SwapContext:ft,SwapContextToken:Tt,isSupportFusion:vt},Symbol.toStringTag,{value:"Module"}));export{Tt as S,Rt as a,vt as i,mt as w};
//# sourceMappingURL=index.esm-CGpnIxUr.js.map
