{"version":3,"mappings":"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","names":["throwError","errorOrErrorFactory","scheduler","errorFactory","isFunction","init","subscriber","Observable","defaultIfEmpty","defaultValue","operate","source","hasValue","createOperatorSubscriber","value","take","count","EMPTY","seen","AccountNotFoundError","BaseError","docsPath","AccountTypeNotSupportedError","metaMessages","type","assertCurrentChain","chain","currentChainId","ChainNotFoundError","ChainMismatchError","getTransactionError","err","args","cause","getNodeError","UnknownNodeError","TransactionExecutionError","sendTransaction","client","parameters","account_","accessList","blobs","data","gas","gasPrice","maxFeePerBlobGas","maxFeePerGas","maxPriorityFeePerGas","nonce","to","rest","account","parseAccount","assertRequest","chainId","getAction","getChainId","chainFormat","_c","_b","_a","request","formatTransactionRequest","extract","prepareTransactionRequest","defaultParameters","serializer","_d","serializedTransaction","sendRawTransaction","writeContract","abi","address","dataSuffix","functionName","encodeFunctionData","addChain","id","name","nativeCurrency","rpcUrls","blockExplorers","numberToHex","url","custom","provider","config","key","retryDelay","defaultRetryCount","createTransport","encodePacked","types","values","AbiEncodingLengthMismatchError","i","encode","concatHex","isArray","isAddress","InvalidAddressError","pad","stringToHex","boolToHex","intMatch","integerRegex","_type","baseType","bits","size","bytesMatch","bytesRegex","BytesSizeMismatchError","arrayMatch","arrayRegex","childType","UnsupportedPackedAbiType","deployContract","walletClient","bytecode","calldata","encodeDeployData","getAddresses","checksumAddress","getPermissions","requestAddresses","getAddress","requestPermissions","permissions","signMessage","message","message_","toHex","signTransaction","transaction","formatters","format","signTypedData","domain","primaryType","getTypesForEIP712Domain","validateTypedData","typedData","serializeTypedData","switchChain","watchAsset","params","walletActions","createWalletClient","transport","createClient","createClientAndSyncChain","error","walletChainId","getChainById","fromEIP1193Event","target","eventName","handler","event","ProviderDataAdapter","info","BehaviorSubject","merge","defer","map","switchMap","from","addresses","startWith","of","shareReplay","combineLatest","activeAddress","chainStr","parseChainId","filter","activeAddressInner","isUserRejectError","code","UniversalBrowserExtensionAdapter","providerDetail","force","state","typeData","stringifyReplacer","_","setChainIdInStorage","storage","getChainIdFromStorage","setActiveAddress","getActiveAddress","setActiveWallet","getActiveWallet","addConnectedWallet","connectedWalletList","connectedWalletSet","getConnectedWallet","removeConnectedWallet","idMap","adapterId","GlobalDataAdapter","dataProvider","BehaviorSubject2","ChainId","defer2","startWith2","map2","distinctUntilChanged","shareReplay2","adapter","filter2","switchMap2","of2","tap","a","combineLatest2","subscribeOn","asapScheduler","activeAdapterInfo","activeAdapterId","isAddressEqual","firstValueFrom","takeUntil","timer","getInjectedProviderSupported","getInjectedProviderDetail","getName","getIcon","icons","m","__vitePreload","WalletConnectV2Adapter","firstValueFrom2","timer2","switchMap3","getWalletConnectProviderDetail","getIcon2","icons2","WalletControllerImpl","Subject","info1","info2","id1","id2","connectState","walletId","retry","activeWalletId","connectedWallet","connectState2","activeAddressFromStore","resolve","skipInjectedProvider","fromEvent","tap2","isEqualsProviders","debounceTime","takeUntil2","timer3","defaultIfEmpty2","injectedProviderDetail","wc","wcId","provider1","provider2","keys1","keys2","createConnectWalletController"],"ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"sources":["../../../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/observable/throwError.js","../../../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/defaultIfEmpty.js","../../../../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/take.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/errors/account.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/utils/chain/assertCurrentChain.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/utils/errors/getTransactionError.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/actions/wallet/sendTransaction.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/actions/wallet/writeContract.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/actions/wallet/addChain.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/clients/transports/custom.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/utils/abi/encodePacked.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/actions/wallet/deployContract.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/actions/wallet/getAddresses.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/actions/wallet/getPermissions.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/actions/wallet/requestAddresses.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/actions/wallet/requestPermissions.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/actions/wallet/signMessage.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/actions/wallet/signTransaction.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/actions/wallet/signTypedData.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/actions/wallet/switchChain.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/actions/wallet/watchAsset.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/clients/decorators/wallet.js","../../../../node_modules/.pnpm/viem@2.18.8_typescript@5.5.3/node_modules/viem/_esm/clients/createWalletClient.js","../../../libs/sdk/wallet/index.esm.js"],"sourcesContent":["import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nexport function throwError(errorOrErrorFactory, scheduler) {\n    var errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : function () { return errorOrErrorFactory; };\n    var init = function (subscriber) { return subscriber.error(errorFactory()); };\n    return new Observable(scheduler ? function (subscriber) { return scheduler.schedule(init, 0, subscriber); } : init);\n}\n//# sourceMappingURL=throwError.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function defaultIfEmpty(defaultValue) {\n    return operate(function (source, subscriber) {\n        var hasValue = false;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            hasValue = true;\n            subscriber.next(value);\n        }, function () {\n            if (!hasValue) {\n                subscriber.next(defaultValue);\n            }\n            subscriber.complete();\n        }));\n    });\n}\n//# sourceMappingURL=defaultIfEmpty.js.map","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            function () { return EMPTY; }\n        : operate(function (source, subscriber) {\n            var seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n//# sourceMappingURL=take.js.map","import { BaseError } from './base.js';\nexport class AccountNotFoundError extends BaseError {\n    constructor({ docsPath } = {}) {\n        super([\n            'Could not find an Account to execute with this Action.',\n            'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client.',\n        ].join('\\n'), {\n            docsPath,\n            docsSlug: 'account',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AccountNotFoundError'\n        });\n    }\n}\nexport class AccountTypeNotSupportedError extends BaseError {\n    constructor({ docsPath, metaMessages, type, }) {\n        super(`Account type \"${type}\" is not supported.`, {\n            docsPath,\n            metaMessages,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AccountTypeNotSupportedError'\n        });\n    }\n}\n//# sourceMappingURL=account.js.map","import { ChainMismatchError, ChainNotFoundError, } from '../../errors/chain.js';\nexport function assertCurrentChain({ chain, currentChainId, }) {\n    if (!chain)\n        throw new ChainNotFoundError();\n    if (currentChainId !== chain.id)\n        throw new ChainMismatchError({ chain, currentChainId });\n}\n//# sourceMappingURL=assertCurrentChain.js.map","import { UnknownNodeError } from '../../errors/node.js';\nimport { TransactionExecutionError, } from '../../errors/transaction.js';\nimport { getNodeError, } from './getNodeError.js';\nexport function getTransactionError(err, { docsPath, ...args }) {\n    const cause = (() => {\n        const cause = getNodeError(err, args);\n        if (cause instanceof UnknownNodeError)\n            return err;\n        return cause;\n    })();\n    return new TransactionExecutionError(cause, {\n        docsPath,\n        ...args,\n    });\n}\n//# sourceMappingURL=getTransactionError.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { AccountNotFoundError, AccountTypeNotSupportedError, } from '../../errors/account.js';\nimport { assertCurrentChain, } from '../../utils/chain/assertCurrentChain.js';\nimport { getTransactionError, } from '../../utils/errors/getTransactionError.js';\nimport { extract } from '../../utils/formatters/extract.js';\nimport { formatTransactionRequest, } from '../../utils/formatters/transactionRequest.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { assertRequest, } from '../../utils/transaction/assertRequest.js';\nimport { getChainId } from '../public/getChainId.js';\nimport { defaultParameters, prepareTransactionRequest, } from './prepareTransactionRequest.js';\nimport { sendRawTransaction, } from './sendRawTransaction.js';\n/**\n * Creates, signs, and sends a new transaction to the network.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendTransaction\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/sending-transactions\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\n *   - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\n *\n * @param client - Client to use\n * @param parameters - {@link SendTransactionParameters}\n * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const hash = await sendTransaction(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const hash = await sendTransaction(client, {\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n */\nexport async function sendTransaction(client, parameters) {\n    const { account: account_ = client.account, chain = client.chain, accessList, blobs, data, gas, gasPrice, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, ...rest } = parameters;\n    if (!account_)\n        throw new AccountNotFoundError({\n            docsPath: '/docs/actions/wallet/sendTransaction',\n        });\n    const account = parseAccount(account_);\n    try {\n        assertRequest(parameters);\n        let chainId;\n        if (chain !== null) {\n            chainId = await getAction(client, getChainId, 'getChainId')({});\n            assertCurrentChain({\n                currentChainId: chainId,\n                chain,\n            });\n        }\n        if (account.type === 'json-rpc') {\n            const chainFormat = client.chain?.formatters?.transactionRequest?.format;\n            const format = chainFormat || formatTransactionRequest;\n            const request = format({\n                // Pick out extra data that might exist on the chain's transaction request type.\n                ...extract(rest, { format: chainFormat }),\n                accessList,\n                blobs,\n                chainId,\n                data,\n                from: account.address,\n                gas,\n                gasPrice,\n                maxFeePerBlobGas,\n                maxFeePerGas,\n                maxPriorityFeePerGas,\n                nonce,\n                to,\n                value,\n            });\n            return await client.request({\n                method: 'eth_sendTransaction',\n                params: [request],\n            }, { retryCount: 0 });\n        }\n        if (account.type === 'local') {\n            // Prepare the request for signing (assign appropriate fees, etc.)\n            const request = await getAction(client, prepareTransactionRequest, 'prepareTransactionRequest')({\n                account,\n                accessList,\n                blobs,\n                chain,\n                chainId,\n                data,\n                gas,\n                gasPrice,\n                maxFeePerBlobGas,\n                maxFeePerGas,\n                maxPriorityFeePerGas,\n                nonce,\n                parameters: [...defaultParameters, 'sidecars'],\n                to,\n                value,\n                ...rest,\n            });\n            const serializer = chain?.serializers?.transaction;\n            const serializedTransaction = (await account.signTransaction(request, {\n                serializer,\n            }));\n            return await getAction(client, sendRawTransaction, 'sendRawTransaction')({\n                serializedTransaction,\n            });\n        }\n        if (account.type === 'smart')\n            throw new AccountTypeNotSupportedError({\n                metaMessages: [\n                    'Consider using the `sendUserOperation` Action instead.',\n                ],\n                docsPath: '/docs/actions/bundler/sendUserOperation',\n                type: 'smart',\n            });\n        throw new Error('incompatible account type.');\n    }\n    catch (err) {\n        if (err instanceof AccountTypeNotSupportedError)\n            throw err;\n        throw getTransactionError(err, {\n            ...parameters,\n            account,\n            chain: parameters.chain || undefined,\n        });\n    }\n}\n//# sourceMappingURL=sendTransaction.js.map","import { encodeFunctionData, } from '../../utils/abi/encodeFunctionData.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { sendTransaction, } from './sendTransaction.js';\n/**\n * Executes a write function on a contract.\n *\n * - Docs: https://viem.sh/docs/contract/writeContract\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/writing-to-contracts\n *\n * A \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms) is needed to be broadcast in order to change the state.\n *\n * Internally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * __Warning: The `write` internally sends a transaction – it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract#usage) before you execute it.__\n *\n * @param client - Client to use\n * @param parameters - {@link WriteContractParameters}\n * @returns A [Transaction Hash](https://viem.sh/docs/glossary/terms#hash). {@link WriteContractReturnType}\n *\n * @example\n * import { createWalletClient, custom, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { writeContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const hash = await writeContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n *   functionName: 'mint',\n *   args: [69420],\n * })\n *\n * @example\n * // With Validation\n * import { createWalletClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateContract, writeContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const { request } = await simulateContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n *   functionName: 'mint',\n *   args: [69420],\n * }\n * const hash = await writeContract(client, request)\n */\nexport async function writeContract(client, parameters) {\n    const { abi, address, args, dataSuffix, functionName, ...request } = parameters;\n    const data = encodeFunctionData({\n        abi,\n        args,\n        functionName,\n    });\n    return getAction(client, sendTransaction, 'sendTransaction')({\n        data: `${data}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n        to: address,\n        ...request,\n    });\n}\n//# sourceMappingURL=writeContract.js.map","import { numberToHex, } from '../../utils/encoding/toHex.js';\n/**\n * Adds an EVM chain to the wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/addChain\n * - JSON-RPC Methods: [`eth_addEthereumChain`](https://eips.ethereum.org/EIPS/eip-3085)\n *\n * @param client - Client to use\n * @param parameters - {@link AddChainParameters}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { optimism } from 'viem/chains'\n * import { addChain } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   transport: custom(window.ethereum),\n * })\n * await addChain(client, { chain: optimism })\n */\nexport async function addChain(client, { chain }) {\n    const { id, name, nativeCurrency, rpcUrls, blockExplorers } = chain;\n    await client.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n            {\n                chainId: numberToHex(id),\n                chainName: name,\n                nativeCurrency,\n                rpcUrls: rpcUrls.default.http,\n                blockExplorerUrls: blockExplorers\n                    ? Object.values(blockExplorers).map(({ url }) => url)\n                    : undefined,\n            },\n        ],\n    }, { dedupe: true, retryCount: 0 });\n}\n//# sourceMappingURL=addChain.js.map","import { createTransport, } from './createTransport.js';\n/**\n * @description Creates a custom transport given an EIP-1193 compliant `request` attribute.\n */\nexport function custom(provider, config = {}) {\n    const { key = 'custom', name = 'Custom Provider', retryDelay } = config;\n    return ({ retryCount: defaultRetryCount }) => createTransport({\n        key,\n        name,\n        request: provider.request.bind(provider),\n        retryCount: config.retryCount ?? defaultRetryCount,\n        retryDelay,\n        type: 'custom',\n    });\n}\n//# sourceMappingURL=custom.js.map","import { AbiEncodingLengthMismatchError, BytesSizeMismatchError, UnsupportedPackedAbiType, } from '../../errors/abi.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { isAddress } from '../address/isAddress.js';\nimport { concatHex } from '../data/concat.js';\nimport { pad } from '../data/pad.js';\nimport { boolToHex, numberToHex, stringToHex, } from '../encoding/toHex.js';\nimport { arrayRegex, bytesRegex, integerRegex } from '../regex.js';\nexport function encodePacked(types, values) {\n    if (types.length !== values.length)\n        throw new AbiEncodingLengthMismatchError({\n            expectedLength: types.length,\n            givenLength: values.length,\n        });\n    const data = [];\n    for (let i = 0; i < types.length; i++) {\n        const type = types[i];\n        const value = values[i];\n        data.push(encode(type, value));\n    }\n    return concatHex(data);\n}\nfunction encode(type, value, isArray = false) {\n    if (type === 'address') {\n        const address = value;\n        if (!isAddress(address))\n            throw new InvalidAddressError({ address });\n        return pad(address.toLowerCase(), {\n            size: isArray ? 32 : null,\n        });\n    }\n    if (type === 'string')\n        return stringToHex(value);\n    if (type === 'bytes')\n        return value;\n    if (type === 'bool')\n        return pad(boolToHex(value), { size: isArray ? 32 : 1 });\n    const intMatch = type.match(integerRegex);\n    if (intMatch) {\n        const [_type, baseType, bits = '256'] = intMatch;\n        const size = Number.parseInt(bits) / 8;\n        return numberToHex(value, {\n            size: isArray ? 32 : size,\n            signed: baseType === 'int',\n        });\n    }\n    const bytesMatch = type.match(bytesRegex);\n    if (bytesMatch) {\n        const [_type, size] = bytesMatch;\n        if (Number.parseInt(size) !== (value.length - 2) / 2)\n            throw new BytesSizeMismatchError({\n                expectedSize: Number.parseInt(size),\n                givenSize: (value.length - 2) / 2,\n            });\n        return pad(value, { dir: 'right', size: isArray ? 32 : null });\n    }\n    const arrayMatch = type.match(arrayRegex);\n    if (arrayMatch && Array.isArray(value)) {\n        const [_type, childType] = arrayMatch;\n        const data = [];\n        for (let i = 0; i < value.length; i++) {\n            data.push(encode(childType, value[i], true));\n        }\n        if (data.length === 0)\n            return '0x';\n        return concatHex(data);\n    }\n    throw new UnsupportedPackedAbiType(type);\n}\n//# sourceMappingURL=encodePacked.js.map","import { encodeDeployData } from '../../utils/abi/encodeDeployData.js';\nimport { sendTransaction, } from './sendTransaction.js';\n/**\n * Deploys a contract to the network, given bytecode and constructor arguments.\n *\n * - Docs: https://viem.sh/docs/contract/deployContract\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/deploying-contracts\n *\n * @param client - Client to use\n * @param parameters - {@link DeployContractParameters}\n * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link DeployContractReturnType}\n *\n * @example\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { deployContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const hash = await deployContract(client, {\n *   abi: [],\n *   account: '0x…,\n *   bytecode: '0x608060405260405161083e38038061083e833981016040819052610...',\n * })\n */\nexport function deployContract(walletClient, parameters) {\n    const { abi, args, bytecode, ...request } = parameters;\n    const calldata = encodeDeployData({ abi, args, bytecode });\n    return sendTransaction(walletClient, {\n        ...request,\n        data: calldata,\n    });\n}\n//# sourceMappingURL=deployContract.js.map","import { checksumAddress, } from '../../utils/address/getAddress.js';\n/**\n * Returns a list of account addresses owned by the wallet or client.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getAddresses\n * - JSON-RPC Methods: [`eth_accounts`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_accounts)\n *\n * @param client - Client to use\n * @returns List of account addresses owned by the wallet or client. {@link GetAddressesReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getAddresses } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const accounts = await getAddresses(client)\n */\nexport async function getAddresses(client) {\n    if (client.account?.type === 'local')\n        return [client.account.address];\n    const addresses = await client.request({ method: 'eth_accounts' }, { dedupe: true });\n    return addresses.map((address) => checksumAddress(address));\n}\n//# sourceMappingURL=getAddresses.js.map","/**\n * Gets the wallets current permissions.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getPermissions\n * - JSON-RPC Methods: [`wallet_getPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n *\n * @param client - Client to use\n * @returns The wallet permissions. {@link GetPermissionsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getPermissions } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const permissions = await getPermissions(client)\n */\nexport async function getPermissions(client) {\n    const permissions = await client.request({ method: 'wallet_getPermissions' }, { dedupe: true });\n    return permissions;\n}\n//# sourceMappingURL=getPermissions.js.map","import { getAddress } from '../../utils/address/getAddress.js';\n/**\n * Requests a list of accounts managed by a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/requestAddresses\n * - JSON-RPC Methods: [`eth_requestAccounts`](https://eips.ethereum.org/EIPS/eip-1102)\n *\n * Sends a request to the wallet, asking for permission to access the user's accounts. After the user accepts the request, it will return a list of accounts (addresses).\n *\n * This API can be useful for dapps that need to access the user's accounts in order to execute transactions or interact with smart contracts.\n *\n * @param client - Client to use\n * @returns List of accounts managed by a wallet {@link RequestAddressesReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { requestAddresses } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const accounts = await requestAddresses(client)\n */\nexport async function requestAddresses(client) {\n    const addresses = await client.request({ method: 'eth_requestAccounts' }, { dedupe: true, retryCount: 0 });\n    return addresses.map((address) => getAddress(address));\n}\n//# sourceMappingURL=requestAddresses.js.map","/**\n * Requests permissions for a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/requestPermissions\n * - JSON-RPC Methods: [`wallet_requestPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n *\n * @param client - Client to use\n * @param parameters - {@link RequestPermissionsParameters}\n * @returns The wallet permissions. {@link RequestPermissionsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { requestPermissions } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const permissions = await requestPermissions(client, {\n *   eth_accounts: {}\n * })\n */\nexport async function requestPermissions(client, permissions) {\n    return client.request({\n        method: 'wallet_requestPermissions',\n        params: [permissions],\n    }, { retryCount: 0 });\n}\n//# sourceMappingURL=requestPermissions.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { AccountNotFoundError } from '../../errors/account.js';\nimport { stringToHex, toHex, } from '../../utils/encoding/toHex.js';\n/**\n * Calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signMessage\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`personal_sign`](https://docs.metamask.io/guide/signing-data#personal-sign)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * With the calculated signature, you can:\n * - use [`verifyMessage`](https://viem.sh/docs/utilities/verifyMessage) to verify the signature,\n * - use [`recoverMessageAddress`](https://viem.sh/docs/utilities/recoverMessageAddress) to recover the signing address from a signature.\n *\n * @param client - Client to use\n * @param parameters - {@link SignMessageParameters}\n * @returns The signed message. {@link SignMessageReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signMessage } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signMessage(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   message: 'hello world',\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, custom } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signMessage } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signMessage(client, {\n *   message: 'hello world',\n * })\n */\nexport async function signMessage(client, { account: account_ = client.account, message, }) {\n    if (!account_)\n        throw new AccountNotFoundError({\n            docsPath: '/docs/actions/wallet/signMessage',\n        });\n    const account = parseAccount(account_);\n    if (account.signMessage)\n        return account.signMessage({ message });\n    const message_ = (() => {\n        if (typeof message === 'string')\n            return stringToHex(message);\n        if (message.raw instanceof Uint8Array)\n            return toHex(message.raw);\n        return message.raw;\n    })();\n    return client.request({\n        method: 'personal_sign',\n        params: [message_, account.address],\n    }, { retryCount: 0 });\n}\n//# sourceMappingURL=signMessage.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { AccountNotFoundError } from '../../errors/account.js';\nimport { assertCurrentChain, } from '../../utils/chain/assertCurrentChain.js';\nimport { numberToHex } from '../../utils/encoding/toHex.js';\nimport { formatTransactionRequest, } from '../../utils/formatters/transactionRequest.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { assertRequest, } from '../../utils/transaction/assertRequest.js';\nimport { getChainId } from '../public/getChainId.js';\n/**\n * Signs a transaction.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signTransaction\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * @param args - {@link SignTransactionParameters}\n * @returns The signed serialized transaction. {@link SignTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signTransaction } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTransaction(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signTransaction } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTransaction(client, {\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n */\nexport async function signTransaction(client, parameters) {\n    const { account: account_ = client.account, chain = client.chain, ...transaction } = parameters;\n    if (!account_)\n        throw new AccountNotFoundError({\n            docsPath: '/docs/actions/wallet/signTransaction',\n        });\n    const account = parseAccount(account_);\n    assertRequest({\n        account,\n        ...parameters,\n    });\n    const chainId = await getAction(client, getChainId, 'getChainId')({});\n    if (chain !== null)\n        assertCurrentChain({\n            currentChainId: chainId,\n            chain,\n        });\n    const formatters = chain?.formatters || client.chain?.formatters;\n    const format = formatters?.transactionRequest?.format || formatTransactionRequest;\n    if (account.signTransaction)\n        return account.signTransaction({\n            ...transaction,\n            chainId,\n        }, { serializer: client.chain?.serializers?.transaction });\n    return await client.request({\n        method: 'eth_signTransaction',\n        params: [\n            {\n                ...format(transaction),\n                chainId: numberToHex(chainId),\n                from: account.address,\n            },\n        ],\n    }, { retryCount: 0 });\n}\n//# sourceMappingURL=signTransaction.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { AccountNotFoundError, } from '../../errors/account.js';\nimport { getTypesForEIP712Domain, serializeTypedData, validateTypedData, } from '../../utils/typedData.js';\n/**\n * Signs typed data and calculates an Ethereum-specific signature in [https://eips.ethereum.org/EIPS/eip-712](https://eips.ethereum.org/EIPS/eip-712): `sign(keccak256(\"\\x19\\x01\" ‖ domainSeparator ‖ hashStruct(message)))`\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signTypedData\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_signTypedData_v4`](https://docs.metamask.io/guide/signing-data#signtypeddata-v4)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * @param client - Client to use\n * @param parameters - {@link SignTypedDataParameters}\n * @returns The signed data. {@link SignTypedDataReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signTypedData } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTypedData(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   domain: {\n *     name: 'Ether Mail',\n *     version: '1',\n *     chainId: 1,\n *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n *   },\n *   types: {\n *     Person: [\n *       { name: 'name', type: 'string' },\n *       { name: 'wallet', type: 'address' },\n *     ],\n *     Mail: [\n *       { name: 'from', type: 'Person' },\n *       { name: 'to', type: 'Person' },\n *       { name: 'contents', type: 'string' },\n *     ],\n *   },\n *   primaryType: 'Mail',\n *   message: {\n *     from: {\n *       name: 'Cow',\n *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n *     },\n *     to: {\n *       name: 'Bob',\n *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n *     },\n *     contents: 'Hello, Bob!',\n *   },\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signTypedData } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const signature = await signTypedData(client, {\n *   domain: {\n *     name: 'Ether Mail',\n *     version: '1',\n *     chainId: 1,\n *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n *   },\n *   types: {\n *     Person: [\n *       { name: 'name', type: 'string' },\n *       { name: 'wallet', type: 'address' },\n *     ],\n *     Mail: [\n *       { name: 'from', type: 'Person' },\n *       { name: 'to', type: 'Person' },\n *       { name: 'contents', type: 'string' },\n *     ],\n *   },\n *   primaryType: 'Mail',\n *   message: {\n *     from: {\n *       name: 'Cow',\n *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n *     },\n *     to: {\n *       name: 'Bob',\n *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n *     },\n *     contents: 'Hello, Bob!',\n *   },\n * })\n */\nexport async function signTypedData(client, parameters) {\n    const { account: account_ = client.account, domain, message, primaryType, } = parameters;\n    if (!account_)\n        throw new AccountNotFoundError({\n            docsPath: '/docs/actions/wallet/signTypedData',\n        });\n    const account = parseAccount(account_);\n    const types = {\n        EIP712Domain: getTypesForEIP712Domain({ domain }),\n        ...parameters.types,\n    };\n    // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n    // as we can't statically check this with TypeScript.\n    validateTypedData({ domain, message, primaryType, types });\n    if (account.signTypedData)\n        return account.signTypedData({ domain, message, primaryType, types });\n    const typedData = serializeTypedData({ domain, message, primaryType, types });\n    return client.request({\n        method: 'eth_signTypedData_v4',\n        params: [account.address, typedData],\n    }, { retryCount: 0 });\n}\n//# sourceMappingURL=signTypedData.js.map","import { numberToHex, } from '../../utils/encoding/toHex.js';\n/**\n * Switch the target chain in a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/switchChain\n * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-3326)\n *\n * @param client - Client to use\n * @param parameters - {@link SwitchChainParameters}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet, optimism } from 'viem/chains'\n * import { switchChain } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * await switchChain(client, { id: optimism.id })\n */\nexport async function switchChain(client, { id }) {\n    await client.request({\n        method: 'wallet_switchEthereumChain',\n        params: [\n            {\n                chainId: numberToHex(id),\n            },\n        ],\n    }, { retryCount: 0 });\n}\n//# sourceMappingURL=switchChain.js.map","/**\n * Adds an EVM chain to the wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/watchAsset\n * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-747)\n *\n * @param client - Client to use\n * @param parameters - {@link WatchAssetParameters}\n * @returns Boolean indicating if the token was successfully added. {@link WatchAssetReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchAsset } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const success = await watchAsset(client, {\n *   type: 'ERC20',\n *   options: {\n *     address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n *     decimals: 18,\n *     symbol: 'WETH',\n *   },\n * })\n */\nexport async function watchAsset(client, params) {\n    const added = await client.request({\n        method: 'wallet_watchAsset',\n        params,\n    }, { retryCount: 0 });\n    return added;\n}\n//# sourceMappingURL=watchAsset.js.map","import { getChainId, } from '../../actions/public/getChainId.js';\nimport { addChain, } from '../../actions/wallet/addChain.js';\nimport { deployContract, } from '../../actions/wallet/deployContract.js';\nimport { getAddresses, } from '../../actions/wallet/getAddresses.js';\nimport { getPermissions, } from '../../actions/wallet/getPermissions.js';\nimport { prepareTransactionRequest, } from '../../actions/wallet/prepareTransactionRequest.js';\nimport { requestAddresses, } from '../../actions/wallet/requestAddresses.js';\nimport { requestPermissions, } from '../../actions/wallet/requestPermissions.js';\nimport { sendRawTransaction, } from '../../actions/wallet/sendRawTransaction.js';\nimport { sendTransaction, } from '../../actions/wallet/sendTransaction.js';\nimport { signMessage, } from '../../actions/wallet/signMessage.js';\nimport { signTransaction, } from '../../actions/wallet/signTransaction.js';\nimport { signTypedData, } from '../../actions/wallet/signTypedData.js';\nimport { switchChain, } from '../../actions/wallet/switchChain.js';\nimport { watchAsset, } from '../../actions/wallet/watchAsset.js';\nimport { writeContract, } from '../../actions/wallet/writeContract.js';\nexport function walletActions(client) {\n    return {\n        addChain: (args) => addChain(client, args),\n        deployContract: (args) => deployContract(client, args),\n        getAddresses: () => getAddresses(client),\n        getChainId: () => getChainId(client),\n        getPermissions: () => getPermissions(client),\n        prepareTransactionRequest: (args) => prepareTransactionRequest(client, args),\n        requestAddresses: () => requestAddresses(client),\n        requestPermissions: (args) => requestPermissions(client, args),\n        sendRawTransaction: (args) => sendRawTransaction(client, args),\n        sendTransaction: (args) => sendTransaction(client, args),\n        signMessage: (args) => signMessage(client, args),\n        signTransaction: (args) => signTransaction(client, args),\n        signTypedData: (args) => signTypedData(client, args),\n        switchChain: (args) => switchChain(client, args),\n        watchAsset: (args) => watchAsset(client, args),\n        writeContract: (args) => writeContract(client, args),\n    };\n}\n//# sourceMappingURL=wallet.js.map","import { createClient, } from './createClient.js';\nimport { walletActions } from './decorators/wallet.js';\nexport function createWalletClient(parameters) {\n    const { key = 'wallet', name = 'Wallet Client', transport } = parameters;\n    const client = createClient({\n        ...parameters,\n        key,\n        name,\n        transport,\n        type: 'walletClient',\n    });\n    return client.extend(walletActions);\n}\n//# sourceMappingURL=createWalletClient.js.map","// libs/sdk/src/lib/wallet/connect-wallet-controller.ts\nimport { debounceTime, defaultIfEmpty as defaultIfEmpty2, fromEvent, Subject, take, takeUntil as takeUntil2, tap as tap2, timer as timer3 } from \"rxjs\";\n\n// libs/sdk/src/lib/wallet/adapters/create-client-and-sync-chain.ts\nimport { createWalletClient, custom } from \"viem\";\nimport { getChainById } from \"@one-inch-community/sdk/chain\";\nasync function createClientAndSyncChain(chainId, provider, address) {\n  const client = createClient(\n    chainId,\n    provider,\n    address\n  );\n  await client.requestAddresses().catch((error) => {\n    if (error.core === 4001 || error.message?.toLowerCase()?.includes(\"user reject\") || error.details === \"Cancelled\") throw error;\n  });\n  const walletChainId = await client.getChainId();\n  if (chainId !== walletChainId) {\n    await client.switchChain(getChainById(chainId));\n  }\n  return client;\n}\nfunction createClient(chainId, provider, address) {\n  return createWalletClient({\n    chain: getChainById(chainId),\n    transport: custom(provider),\n    account: address\n  });\n}\n\n// libs/sdk/src/lib/wallet/provider-data-adapter.ts\nimport {\n  BehaviorSubject,\n  filter,\n  from,\n  map,\n  of,\n  shareReplay,\n  startWith,\n  switchMap,\n  combineLatest,\n  defer,\n  merge\n} from \"rxjs\";\n\n// libs/sdk/src/lib/wallet/from-eip1193-event.ts\nimport { Observable } from \"rxjs\";\nfunction fromEIP1193Event(target, eventName) {\n  return new Observable((subscriber) => {\n    const handler = (event) => {\n      subscriber.next(event);\n    };\n    target.on(eventName, handler);\n    return () => {\n      if (\"removeListener\" in target) {\n        return target.removeListener(eventName, handler);\n      }\n      console.warn(\"unable to unsubscribe from provider\", target, eventName);\n    };\n  });\n}\n\n// libs/sdk/src/lib/wallet/provider-data-adapter.ts\nvar ProviderDataAdapter = class {\n  constructor(info) {\n    this.info = info;\n    this.provider$ = new BehaviorSubject(null);\n    this.activeAddressInner$ = new BehaviorSubject(null);\n    this.providerOrDisconnect$ = merge(\n      this.provider$,\n      defer(() => this.disconnect$).pipe(map(() => null))\n    );\n    this.addresses$ = this.providerOrDisconnect$.pipe(\n      switchMap((provider) => {\n        if (!provider) return of([]);\n        return from(this.getAddresses()).pipe(\n          switchMap((addresses) => fromEIP1193Event(provider, \"accountsChanged\").pipe(\n            startWith(addresses)\n          ))\n        );\n      }),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n    this.activeAddress$ = combineLatest([\n      this.addresses$,\n      this.activeAddressInner$\n    ]).pipe(\n      map(([addresses, activeAddress]) => {\n        if (activeAddress) return activeAddress;\n        return addresses[0];\n      }),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n    this.chainId$ = this.providerOrDisconnect$.pipe(\n      switchMap((provider) => {\n        if (!provider) return of(null);\n        return from(this.getChainId()).pipe(\n          switchMap((chainId) => fromEIP1193Event(provider, \"chainChanged\").pipe(\n            map((chainStr) => {\n              return parseChainId(chainStr);\n            }),\n            startWith(chainId)\n          ))\n        );\n      }),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n    this.disconnect$ = this.provider$.pipe(\n      filter(Boolean),\n      switchMap((provider) => fromEIP1193Event(provider, \"disconnect\"))\n    );\n    this.isConnected$ = this.activeAddress$.pipe(\n      map((address) => !!address)\n    );\n    this.info$ = of(info);\n  }\n  getInfo() {\n    return this.info;\n  }\n  setProvider(provider) {\n    this.provider$.next(provider);\n  }\n  async getAddresses() {\n    const provider = this.provider$.value;\n    if (!provider) return [];\n    return await provider.request({ method: \"eth_accounts\" });\n  }\n  async getActiveAddress() {\n    const activeAddressInner = this.activeAddressInner$.value;\n    if (activeAddressInner) {\n      return activeAddressInner;\n    }\n    const addresses = await this.getAddresses();\n    return addresses[0] ?? null;\n  }\n  async getChainId() {\n    const provider = this.provider$.value;\n    if (!provider) return null;\n    const chainStr = await provider.request({ method: \"eth_chainId\" }).catch(() => null);\n    if (!chainStr) return null;\n    return parseChainId(chainStr);\n  }\n  async isConnected() {\n    const address = await this.getActiveAddress();\n    return !!address;\n  }\n  setActiveAddress(address) {\n    this.activeAddressInner$.next(address);\n  }\n};\nfunction parseChainId(chainId) {\n  if (typeof chainId === \"number\") {\n    return chainId;\n  }\n  return parseInt(chainId, 16);\n}\n\n// libs/sdk/src/lib/wallet/wallet-errors.ts\nfunction isUserRejectError(error) {\n  const { code, message } = error;\n  return code === 4001 || message?.toLowerCase().includes(\"user rejected\");\n}\n\n// libs/sdk/src/lib/wallet/adapters/universal-browser-extension-adapter.ts\nvar UniversalBrowserExtensionAdapter = class {\n  constructor(providerDetail) {\n    this.providerDetail = providerDetail;\n    this.client = null;\n    this.data = new ProviderDataAdapter(this.providerDetail.info);\n  }\n  async connect(chainId) {\n    this.client = await createClientAndSyncChain(chainId, this.providerDetail.provider);\n    this.data.setProvider(this.providerDetail.provider);\n    return true;\n  }\n  async restoreConnect(chainId, force) {\n    this.data.setProvider(this.providerDetail.provider);\n    const addresses = await this.data.getAddresses();\n    const state = addresses.length > 0 && chainId !== null;\n    if (!state) {\n      this.data.setProvider(null);\n    } else {\n      this.client = createClient(chainId, this.providerDetail.provider);\n    }\n    if (!state && force) {\n      return this.connect(chainId);\n    }\n    return state;\n  }\n  async disconnect() {\n    this.client = null;\n    this.data.setProvider(null);\n    return true;\n  }\n  async changeChain(chainId) {\n    if (!this.client) return false;\n    await this.client.switchChain({ id: chainId });\n    return true;\n  }\n  async isConnected() {\n    const addresses = await this.client?.getAddresses() ?? [];\n    return addresses.length > 0;\n  }\n  setActiveAddress(address) {\n    this.data.setActiveAddress(address);\n  }\n  async writeContract(params) {\n    if (!await this.isConnected() || !this.client) {\n      throw new Error(\"Wallet not connected\");\n    }\n    const address = await this.data.getActiveAddress();\n    return await this.client.writeContract({\n      ...params,\n      account: address\n    });\n  }\n  async signTypedData(typeData) {\n    if (!await this.isConnected() || !this.client) {\n      throw new Error(\"Wallet not connected\");\n    }\n    const address = await this.data.getActiveAddress();\n    try {\n      return await this.client.signTypedData({\n        ...typeData,\n        account: address\n      });\n    } catch (error) {\n      if (isUserRejectError(error)) {\n        throw error;\n      }\n      console.log(error);\n    }\n    const data = JSON.stringify(typeData, stringifyReplacer);\n    return await this.providerDetail.provider.request({\n      method: \"eth_signTypedData_v3\",\n      params: [address, data]\n    });\n  }\n};\nfunction stringifyReplacer(_, value) {\n  if (typeof value === \"bigint\") {\n    return value.toString();\n  }\n  return value;\n}\n\n// libs/sdk/src/lib/wallet/global-data-adapter.ts\nimport { ChainId } from \"@one-inch-community/models\";\nimport {\n  BehaviorSubject as BehaviorSubject2,\n  defaultIfEmpty,\n  defer as defer2,\n  distinctUntilChanged,\n  firstValueFrom,\n  map as map2,\n  of as of2,\n  shareReplay as shareReplay2,\n  startWith as startWith2,\n  switchMap as switchMap2,\n  takeUntil,\n  timer,\n  combineLatest as combineLatest2,\n  tap,\n  subscribeOn,\n  asapScheduler,\n  filter as filter2\n} from \"rxjs\";\nimport { isAddressEqual } from \"viem\";\n\n// libs/sdk/src/lib/wallet/storage.ts\nimport { storage } from \"@one-inch-community/core/storage\";\nfunction setChainIdInStorage(chainId) {\n  storage.set(\"chainId\", Number(chainId));\n}\nfunction getChainIdFromStorage() {\n  return storage.get(\"chainId\", Number);\n}\nfunction setActiveAddress(address) {\n  storage.set(\"activeAddress\", address);\n}\nfunction getActiveAddress() {\n  return storage.get(\"activeAddress\", String);\n}\nfunction setActiveWallet(id) {\n  storage.set(\"activeWallet\", id);\n}\nfunction getActiveWallet() {\n  return storage.get(\"activeWallet\", String);\n}\nfunction addConnectedWallet(id) {\n  const connectedWalletList = storage.get(\"connectedWallet\", JSON.parse);\n  const connectedWalletSet = new Set(connectedWalletList);\n  if (connectedWalletSet.has(id)) {\n    return;\n  }\n  connectedWalletSet.add(id);\n  storage.set(\"connectedWallet\", [...connectedWalletSet.keys()]);\n}\nfunction getConnectedWallet() {\n  return storage.get(\"connectedWallet\", JSON.parse);\n}\nfunction removeConnectedWallet(id) {\n  const connectedWalletList = storage.get(\"connectedWallet\", JSON.parse);\n  const connectedWalletSet = new Set(connectedWalletList);\n  if (!connectedWalletSet.has(id)) {\n    return;\n  }\n  connectedWalletSet.delete(id);\n  storage.set(\"connectedWallet\", [...connectedWalletSet.keys()]);\n}\n\n// libs/sdk/src/lib/wallet/adapter-id.ts\nimport { encodePacked } from \"viem\";\nvar idMap = /* @__PURE__ */ new WeakMap();\nfunction adapterId(info) {\n  if (idMap.has(info)) {\n    return idMap.get(info);\n  }\n  const id = encodePacked(\n    [\"string\", \"string\", \"string\"],\n    [\n      info.name,\n      info.rdns ?? \"\",\n      info.icon\n    ]\n  ).slice(0, 10);\n  idMap.set(info, id);\n  return id;\n}\n\n// libs/sdk/src/lib/wallet/global-data-adapter.ts\nvar GlobalDataAdapter = class {\n  constructor(dataProvider) {\n    this.dataProvider = dataProvider;\n    this.chainIdInner$ = new BehaviorSubject2(getChainIdFromStorage() ?? ChainId.eth);\n    this.currentActiveAdapter$ = defer2(() => this.dataProvider.update$).pipe(\n      startWith2(null),\n      map2(() => this.dataProvider.currentActiveAdapter),\n      distinctUntilChanged(),\n      shareReplay2({ bufferSize: 1, refCount: true })\n    );\n    this.currentActiveAdapterData$ = this.currentActiveAdapter$.pipe(\n      map2((adapter) => adapter?.data ?? null),\n      shareReplay2({ bufferSize: 1, refCount: true })\n    );\n    this.info$ = this.currentActiveAdapterData$.pipe(\n      filter2(Boolean),\n      switchMap2((data) => data.info$)\n    );\n    this.addresses$ = this.currentActiveAdapterData$.pipe(\n      switchMap2((data) => data?.addresses$ ?? of2([])),\n      tap((a) => console.log(a)),\n      shareReplay2({ bufferSize: 1, refCount: true })\n    );\n    this.activeAddress$ = this.currentActiveAdapterData$.pipe(\n      switchMap2((data) => data?.activeAddress$ ?? of2(null)),\n      tap((address) => address && setActiveAddress(address)),\n      shareReplay2({ bufferSize: 1, refCount: true })\n    );\n    this.chainId$ = combineLatest2([\n      this.currentActiveAdapterData$,\n      this.chainIdInner$\n    ]).pipe(\n      switchMap2(([data, chainId]) => data?.chainId$ ?? of2(chainId)),\n      tap((chainId) => chainId && setChainIdInStorage(chainId)),\n      shareReplay2({ bufferSize: 1, refCount: true })\n    );\n    this.disconnect$ = this.currentActiveAdapterData$.pipe(\n      switchMap2((data) => data?.disconnect$ ?? of2()),\n      shareReplay2({ bufferSize: 1, refCount: true })\n    );\n    this.isConnected$ = this.currentActiveAdapterData$.pipe(\n      switchMap2((data) => data?.isConnected$ ?? of2(false)),\n      shareReplay2({ bufferSize: 1, refCount: true })\n    );\n    combineLatest2([\n      this.activeAddress$,\n      this.chainId$\n    ]).pipe(\n      subscribeOn(asapScheduler)\n    ).subscribe();\n  }\n  getInfo() {\n    if (!this.dataProvider.currentActiveAdapter) throw new Error(\"\");\n    return this.dataProvider.currentActiveAdapter.data.getInfo();\n  }\n  async getAddresses() {\n    const data = await this.getProviderDataAdapter();\n    if (!data) return [];\n    return await data.getAddresses();\n  }\n  async getActiveAddress() {\n    if (!this.dataProvider.currentActiveAdapter) {\n      return null;\n    }\n    const data = await this.getProviderDataAdapter();\n    if (!data) return null;\n    return await data.getActiveAddress();\n  }\n  async getChainId() {\n    if (!this.dataProvider.currentActiveAdapter) {\n      return this.chainIdInner$.value;\n    }\n    const data = await this.getProviderDataAdapter();\n    if (!data) return this.chainIdInner$.value;\n    const chainId = await data.getChainId();\n    if (!chainId) return this.chainIdInner$.value;\n    return chainId;\n  }\n  async isConnected() {\n    if (!this.dataProvider.currentActiveAdapter) {\n      return false;\n    }\n    const data = await this.getProviderDataAdapter();\n    if (!data) return false;\n    return await data.isConnected();\n  }\n  async isActiveAddress(info, address) {\n    const id = adapterId(info);\n    const activeAddress = await this.dataProvider.currentActiveAdapter?.data.getActiveAddress() ?? null;\n    const activeAdapterInfo = this.dataProvider.currentActiveAdapter?.data.getInfo() ?? null;\n    const activeAdapterId = activeAdapterInfo ? adapterId(activeAdapterInfo) : null;\n    return !!activeAddress && !!activeAdapterId && id === activeAdapterId && isAddressEqual(activeAddress, address);\n  }\n  isActiveWallet(info) {\n    const id = adapterId(info);\n    const activeAdapterInfo = this.dataProvider.currentActiveAdapter?.data.getInfo() ?? null;\n    const activeAdapterId = activeAdapterInfo ? adapterId(activeAdapterInfo) : null;\n    return !!activeAdapterId && activeAdapterId === id;\n  }\n  isActiveAddress$(info, address) {\n    const id = adapterId(info);\n    return combineLatest2([\n      this.currentActiveAdapter$,\n      this.activeAddress$\n    ]).pipe(\n      map2(([adapter, activeAddress]) => {\n        const activeAdapterId = adapter ? adapterId(adapter.data.getInfo()) : null;\n        return !!activeAddress && !!activeAdapterId && id === activeAdapterId && isAddressEqual(activeAddress, address);\n      })\n    );\n  }\n  isActiveWallet$(info) {\n    const id = adapterId(info);\n    return this.currentActiveAdapter$.pipe(\n      map2((adapter) => {\n        const activeAdapterId = adapter ? adapterId(adapter.data.getInfo()) : null;\n        return !!activeAdapterId && activeAdapterId === id;\n      })\n    );\n  }\n  setChainId(chainId) {\n    this.chainIdInner$.next(chainId);\n  }\n  getProviderDataAdapter() {\n    return firstValueFrom(this.currentActiveAdapterData$.pipe(\n      takeUntil(timer(0)),\n      defaultIfEmpty(null)\n    ));\n  }\n};\n\n// libs/sdk/src/lib/wallet/injected-provider-detail.ts\nfunction getInjectedProviderSupported() {\n  return !!window.ethereum;\n}\nasync function getInjectedProviderDetail() {\n  if (!window.ethereum) throw new Error(\"injected provider not supported\");\n  return {\n    provider: window.ethereum,\n    info: {\n      walletId: \"injectedWalletId\",\n      uuid: \"injectedWallet\",\n      name: getName(),\n      icon: await getIcon()\n    }\n  };\n}\nvar icons = {\n  default: () => import(\"./default-icon-UF676TO4.js\").then((m) => m.icon),\n  oneInchWallet: () => import(\"./one-inch-wallet-icon-5SPUNDFK.js\").then((m) => m.icon)\n};\nfunction getIcon() {\n  if (window.ethereum?.isOneInchWallet) {\n    return icons.oneInchWallet();\n  }\n  return icons.default();\n}\nfunction getName() {\n  if (window.ethereum?.isOneInchWallet) {\n    return \"1inch wallet\";\n  }\n  return \"Browser wallet\";\n}\n\n// libs/sdk/src/lib/wallet/adapters/wallet-connect-v2-adapter/wallet-connect-v2-adapter.ts\nimport { firstValueFrom as firstValueFrom2, switchMap as switchMap3, throwError, timer as timer2 } from \"rxjs\";\nvar WalletConnectV2Adapter = class {\n  constructor(providerDetail) {\n    this.providerDetail = providerDetail;\n    this.provider = null;\n    this.client = null;\n    this.data = new ProviderDataAdapter(this.providerDetail.info);\n  }\n  async isConnected() {\n    return this.provider?.isConnected() ?? false;\n  }\n  async connect(chainId) {\n    if (!this.provider) {\n      const provider = await import(\"./multi-connect-provider-YOTZYVBH.js\").then((m) => m.MultiConnectProvider.connect());\n      this.client = await createClientAndSyncChain(chainId, provider);\n      this.data.setProvider(provider);\n      this.provider = provider;\n    } else {\n      await this.provider.connect();\n    }\n    return true;\n  }\n  async restoreConnect() {\n    if (!this.provider) {\n      const provider = await import(\"./multi-connect-provider-YOTZYVBH.js\").then((m) => m.MultiConnectProvider.restoreConnect());\n      this.client = await createClientAndSyncChain(provider.chainId, provider);\n      this.data.setProvider(provider);\n      this.provider = provider;\n    } else {\n      await this.provider.restoreConnect();\n    }\n    return true;\n  }\n  async disconnect() {\n    this.provider?.disconnect();\n    return true;\n  }\n  async changeChain(chainId) {\n    await this.client?.switchChain({ id: chainId });\n    return true;\n  }\n  setActiveAddress(address) {\n    this.provider?.setActiveAddress(address);\n  }\n  async writeContract(params) {\n    if (!await this.isConnected() || !this.client) {\n      throw new Error(\"Wallet not connected\");\n    }\n    const address = await this.data.getActiveAddress();\n    return await Promise.any([\n      this.client.writeContract({\n        ...params,\n        account: address\n      }),\n      firstValueFrom2(timer2(60 * 1e3 * 3).pipe(\n        // 3 min\n        switchMap3(() => throwError(() => new Error(\"wallet connect request timed out\")))\n      ))\n    ]);\n  }\n  async signTypedData(typeData) {\n    if (!await this.isConnected() || !this.client) {\n      throw new Error(\"Wallet not connected\");\n    }\n    const address = await this.data.getActiveAddress();\n    return await Promise.race([\n      this.client.signTypedData({\n        ...typeData,\n        account: address\n      }),\n      firstValueFrom2(timer2(60 * 1e3 * 3).pipe(\n        // 3 min\n        switchMap3(() => throwError(() => new Error(\"wallet connect request timed out\")))\n      ))\n    ]);\n  }\n};\n\n// libs/sdk/src/lib/wallet/adapters/wallet-connect-v2-adapter/wallet-connect-provider-detail.ts\nasync function getWalletConnectProviderDetail() {\n  return {\n    info: {\n      walletId: \"walletConnectId\",\n      uuid: \"walletConnect\",\n      name: \"Wallet Connect\",\n      icon: await getIcon2()\n    }\n  };\n}\nvar icons2 = {\n  default: () => import(\"./wallet-connect-icon-NJ76IV67.js\").then((m) => m.icon)\n};\nfunction getIcon2() {\n  return icons2.default();\n}\n\n// libs/sdk/src/lib/wallet/connect-wallet-controller.ts\nvar WalletControllerImpl = class {\n  constructor() {\n    this.data = new GlobalDataAdapter(this);\n    this.activeAdapters = /* @__PURE__ */ new Map();\n    this.update$ = new Subject();\n    this.currentActiveAdapterId = null;\n    this.adapters = /* @__PURE__ */ new Map();\n  }\n  get isConnected() {\n    return this.currentActiveAdapter !== null;\n  }\n  get currentActiveAdapter() {\n    if (!this.currentActiveAdapterId) return null;\n    return this.activeAdapters.get(this.currentActiveAdapterId) ?? null;\n  }\n  async init() {\n    await this.initWallets();\n    await this.restoreChainId();\n    await this.restoreWalletConnection();\n    this.update$.next();\n  }\n  async getSupportedWallets() {\n    const info = [];\n    this.adapters.forEach((adapter) => info.push(adapter.data.getInfo()));\n    return info.sort((info1, info2) => {\n      const id1 = adapterId(info1);\n      const id2 = adapterId(info2);\n      if (id1 === this.currentActiveAdapterId && id2 !== this.currentActiveAdapterId) {\n        return -1;\n      }\n      if (id1 !== this.currentActiveAdapterId && id2 === this.currentActiveAdapterId) {\n        return 1;\n      }\n      if (this.activeAdapters.has(id1) && this.activeAdapters.has(id2)) {\n        return 0;\n      }\n      if (this.activeAdapters.has(id1) && !this.activeAdapters.has(id2)) {\n        return -1;\n      }\n      if (!this.activeAdapters.has(id1) && this.activeAdapters.has(id2)) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n  async connect(info) {\n    const chainId = await this.data.getChainId();\n    const id = adapterId(info);\n    if (!this.adapters.has(id)) {\n      throw new Error(`Invalid wallet info ${info.name} not exist`);\n    }\n    const connectState = await this.connectSafe(chainId, id);\n    this.afterConnectWallet(connectState, id);\n    this.update$.next();\n    return connectState;\n  }\n  async addConnection(info) {\n    const chainId = await this.data.getChainId();\n    const id = adapterId(info);\n    if (!this.adapters.has(id)) {\n      throw new Error(`Invalid wallet info ${info.name} not exist`);\n    }\n    const adapter = this.adapters.get(id);\n    if (!adapter) {\n      throw new Error(`Invalid wallet id`);\n    }\n    if (!this.activeAdapters.has(id)) {\n      throw new Error(`Wallet adapter ${info.name} not connected`);\n    }\n    let connectState;\n    try {\n      connectState = await adapter.connect(chainId);\n    } catch (error) {\n      connectState = false;\n    }\n    this.update$.next();\n    return connectState;\n  }\n  async disconnect() {\n    if (this.currentActiveAdapter === null) return true;\n    try {\n      const state = await this.currentActiveAdapter.disconnect();\n      this.currentActiveAdapterId && this.activeAdapters.delete(this.currentActiveAdapterId);\n      this.currentActiveAdapterId && removeConnectedWallet(this.currentActiveAdapterId);\n      this.currentActiveAdapterId = null;\n      this.update$.next();\n      return state;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n  async changeChain(chainId) {\n    let state = true;\n    if (this.currentActiveAdapter) {\n      try {\n        state = await this.currentActiveAdapter.changeChain(chainId);\n      } catch (error) {\n        state = false;\n      }\n    }\n    if (state) {\n      this.data.setChainId(chainId);\n    }\n    return state;\n  }\n  getDataAdapter(info) {\n    const id = adapterId(info);\n    const adapter = this.adapters.get(id);\n    if (!adapter) {\n      throw new Error(`Invalid wallet info ${info.name} not exist`);\n    }\n    return adapter.data;\n  }\n  async setActiveAddress(info, address) {\n    const id = adapterId(info);\n    return await this.setActiveAddressInner(id, address);\n  }\n  async writeContract(params) {\n    if (!this.currentActiveAdapter || !this.currentActiveAdapter.client) {\n      throw new Error(\"Wallet not connected\");\n    }\n    return await this.currentActiveAdapter.writeContract(params);\n  }\n  async signTypedData(typeData) {\n    if (!this.currentActiveAdapter || !this.currentActiveAdapter.client) {\n      throw new Error(\"Wallet not connected\");\n    }\n    return await this.currentActiveAdapter.signTypedData(typeData);\n  }\n  async setActiveAddressInner(id, address) {\n    let state = true;\n    if (this.currentActiveAdapterId !== id) {\n      const chainId = await this.data.getChainId();\n      if (!this.adapters.has(id)) {\n        throw new Error(`Invalid wallet not exist`);\n      }\n      state = await this.connectSafe(chainId, id);\n      this.afterConnectWallet(state, id);\n    }\n    if (state) {\n      this.currentActiveAdapter?.setActiveAddress(address);\n    }\n    this.update$.next();\n  }\n  async connectSafe(chainId, walletId, retry = false) {\n    const adapter = this.adapters.get(walletId);\n    if (!adapter) {\n      throw new Error(`Invalid wallet id`);\n    }\n    let connectState;\n    if (!this.activeAdapters.has(walletId) || retry) {\n      try {\n        connectState = await adapter.connect(chainId);\n      } catch (error) {\n        connectState = false;\n      }\n      connectState && this.activeAdapters.set(walletId, adapter);\n    } else {\n      connectState = await adapter.isConnected();\n      if (!retry && !connectState) {\n        connectState = await this.connectSafe(chainId, walletId, true);\n      }\n    }\n    return connectState;\n  }\n  async restoreConnectSafe(chainId, walletId, force) {\n    const adapter = this.adapters.get(walletId);\n    if (!adapter) {\n      throw new Error(`Invalid wallet id`);\n    }\n    let connectState;\n    if (!this.activeAdapters.has(walletId)) {\n      try {\n        connectState = await adapter.restoreConnect(chainId, force);\n      } catch (error) {\n        connectState = false;\n      }\n      connectState && this.activeAdapters.set(walletId, adapter);\n    } else {\n      connectState = await adapter.isConnected();\n    }\n    return connectState;\n  }\n  async restoreChainId() {\n    const chainId = getChainIdFromStorage();\n    if (!chainId) return;\n    await this.changeChain(chainId);\n  }\n  async restoreWalletConnection() {\n    const activeWalletId = getActiveWallet();\n    const connectedWallet = getConnectedWallet();\n    if (!connectedWallet) return;\n    await this.getSupportedWallets();\n    const chainId = await this.data.getChainId();\n    for (const id of connectedWallet) {\n      if (id === activeWalletId) continue;\n      if (!this.adapters.has(id)) continue;\n      const connectState2 = await this.restoreConnectSafe(chainId, id).catch(() => false);\n      this.afterConnectWallet(connectState2, id);\n    }\n    if (!activeWalletId || !this.adapters.has(activeWalletId)) return;\n    const connectState = await this.restoreConnectSafe(chainId, activeWalletId, true);\n    this.afterConnectWallet(connectState, activeWalletId);\n    if (!connectState) return;\n    const activeAddressFromStore = getActiveAddress();\n    if (!activeAddressFromStore || !this.currentActiveAdapter) return;\n    const addresses = await this.currentActiveAdapter.data.getAddresses();\n    if (!addresses.includes(activeAddressFromStore)) return;\n    await this.setActiveAddressInner(activeWalletId, activeAddressFromStore);\n  }\n  initWallets() {\n    return new Promise((resolve) => {\n      let skipInjectedProvider = false;\n      fromEvent(window, \"eip6963:announceProvider\").pipe(\n        tap2((event) => {\n          skipInjectedProvider = isEqualsProviders(window.ethereum, event.detail.provider);\n          const id = adapterId(event.detail.info);\n          if (!this.adapters.has(id)) {\n            this.adapters.set(id, new UniversalBrowserExtensionAdapter(event.detail));\n          }\n        }),\n        debounceTime(100),\n        take(1),\n        takeUntil2(timer3(100)),\n        defaultIfEmpty2(null),\n        tap2(async () => {\n          if (!skipInjectedProvider && getInjectedProviderSupported()) {\n            const injectedProviderDetail = await getInjectedProviderDetail();\n            const id = adapterId(injectedProviderDetail.info);\n            if (!this.adapters.has(id)) {\n              this.adapters.set(id, new UniversalBrowserExtensionAdapter(injectedProviderDetail));\n            }\n          }\n          const wc = await getWalletConnectProviderDetail();\n          const wcId = adapterId(wc.info);\n          this.adapters.set(wcId, new WalletConnectV2Adapter(wc));\n          resolve();\n        })\n      ).subscribe();\n      window.dispatchEvent(new Event(\"eip6963:requestProvider\"));\n    });\n  }\n  afterConnectWallet(connectState, id) {\n    if (connectState) {\n      this.currentActiveAdapterId = id;\n      addConnectedWallet(id);\n      setActiveWallet(id);\n    } else {\n      removeConnectedWallet(id);\n      const currentActiveWalletIdFromStore = getActiveWallet();\n      if (currentActiveWalletIdFromStore === id) {\n        setActiveWallet(null);\n      }\n      if (this.currentActiveAdapterId === id) {\n        this.currentActiveAdapterId = null;\n      }\n      if (this.activeAdapters.has(id)) {\n        const adapter = this.adapters.get(id);\n        adapter.disconnect().catch();\n        this.activeAdapters.delete(id);\n      }\n    }\n  }\n};\nfunction isEqualsProviders(provider1, provider2) {\n  if (provider1 === provider2) return true;\n  const keys1 = Object.keys(provider1 ?? {});\n  const keys2 = Object.keys(provider2 ?? {});\n  if (keys1.length !== keys2.length) return false;\n  for (const key of keys1) {\n    if (provider1[key] !== provider2[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction createConnectWalletController() {\n  return new WalletControllerImpl();\n}\nexport {\n  createConnectWalletController,\n  getChainIdFromStorage\n};\n//# sourceMappingURL=index.esm.js.map\n"],"file":"assets/index.esm-C6lA2M88.js"}